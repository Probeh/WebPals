var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountComponent.html",[0,0.66,1,0.916]],["body/components/AccountComponent.html",[0,0.791,1,1.236,2,1.02,3,0.124,4,0.124,5,0.976,6,0.976,7,0.976,8,0.976,9,0.124,10,1.84,11,1.235,12,1.981,13,0.976,14,2.726,15,2.546,16,3.448,17,1.509,18,4.1,19,1.509,20,3.354,21,0.289,22,1.086,23,1.603,24,4.1,25,0.899,26,2.228,27,4.612,28,2.228,29,4.612,30,0.545,31,2.17,32,1.938,33,3.476,34,2.597,35,0.962,36,3.354,37,0.581,38,0.025,39,0.687,40,0.522,41,0.479,42,3.354,43,2.17,44,1.098,45,1.845,46,2.17,47,2.17,48,4.612,49,0.617,50,0.289,51,4.1,52,2.17,53,1.33,54,1.622,55,1.84,56,1.745,57,1.622,58,1.222,59,2.17,60,0.142,61,0.161,62,0.799,63,3.354,64,2.17,65,2.4,66,1.33,67,3.354,68,1.622,69,1.622,70,2.17,71,2.17,72,2.17,73,1.84,74,2.17,75,2.17,76,1.84,77,1.84,78,2.17,79,1.84,80,2.17,81,2.17,82,3.354,83,2.17,84,3.448,85,3.354,86,2.17,87,3.91,88,2.17,89,2.17,90,1.84,91,3.728,92,3.354,93,1.459,94,4.1,95,2.17,96,2.17,97,2.17,98,2.507,99,2.17,100,1.459,101,2.256,102,2.507,103,1.84,104,2.256,105,1.84,106,2.055,107,2.256,108,2.17,109,1.622,110,2.256,111,1.33,112,2.758,113,1.459,114,2.256,115,1.622,116,1.622,117,1.459,118,1.459,119,1.622,120,1.622,121,2.17,122,1.622,123,1.459,124,1.84,125,2.17,126,1.459,127,1.622,128,1.622,129,0.703,130,1.509,131,1.509,132,0.976,133,2.075,134,0.976,135,0.976,136,0.749,137,0.976,138,0.749,139,0.976,140,0.703,141,0.976,142,0.703,143,1.845,144,0.976,145,0.749,146,0.976,147,0.703,148,0.976,149,0.749,150,0.976,151,0.749,152,0.976,153,0.976,154,0.976,155,0.008,156,0.012,157,0.008]],["title/classes/AccountModel.html",[61,0.254,158,2.3]],["body/classes/AccountModel.html",[3,0.209,4,0.209,9,0.209,21,0.489,22,1.588,23,2.103,30,0.922,35,1.219,37,0.983,38,0.024,39,1.029,40,0.984,41,0.81,56,3.066,60,0.322,61,0.273,66,3.61,68,4.404,69,4.404,155,0.013,156,0.017,157,0.013,158,3.296,159,2.742,160,2.742,161,3.317,162,3.003,163,4.901,164,2.065,165,2.065,166,2.788,167,3.668,168,3.668,169,3.051,170,3.668,171,3.668,172,1.115,173,2.467,174,2.467,175,2.467,176,2.467]],["title/modules/AccountModule.html",[177,1.18,178,2.3]],["body/modules/AccountModule.html",[1,1.807,2,1.668,3,0.207,4,0.207,9,0.207,34,3.544,38,0.025,49,0.722,50,0.483,53,2.221,60,0.238,61,0.27,129,1.174,155,0.013,156,0.017,157,0.013,177,1.251,178,4.538,179,1.424,180,1.886,181,3.362,182,2.041,183,2.305,184,2.468,185,3.073,186,3.073,187,3.073,188,3.073,189,3.073,190,3.857,191,2.979,192,2.221,193,1.523,194,2.709,195,2.349,196,3.073,197,4.122,198,3.073,199,3.624,200,2.438,201,3.073,202,3.634,203,2.438,204,2.349,205,4.122,206,1.631]],["title/modules/AccountRoutingModule.html",[177,1.18,190,2.095]],["body/modules/AccountRoutingModule.html",[0,0.876,1,1.506,3,0.259,4,0.259,9,0.259,38,0.025,49,0.686,50,0.605,60,0.298,61,0.338,155,0.016,156,0.02,157,0.016,179,1.784,184,2.043,190,3.445,195,2.193,201,3.849,204,2.716,206,2.043,207,4.54,208,3.053,209,3.782,210,3.178,211,1.907,212,2.556,213,3.849,214,3.393]],["title/components/AppComponent.html",[0,0.66,136,1.18]],["body/components/AppComponent.html",[0,1.07,1,0.992,2,1.499,3,0.211,4,0.211,5,1.665,6,1.665,7,1.665,8,1.665,9,0.211,13,1.665,14,3.046,15,2.844,17,2.218,19,2.218,30,1.393,35,0.714,38,0.024,39,0.826,49,0.416,50,0.493,60,0.243,61,0.275,129,1.199,130,2.218,131,2.218,132,1.665,133,2.66,134,1.665,135,1.665,136,2.041,137,1.665,138,1.278,139,1.665,140,1.199,141,1.665,142,1.199,143,2.495,144,1.665,145,1.278,146,1.665,147,1.199,148,1.665,149,1.278,150,1.665,151,1.278,152,1.665,153,1.665,154,1.665,155,0.013,156,0.017,157,0.013,215,3.138,216,3.316,217,5.544,218,4.93,219,3.701]],["title/classes/AppConfig.html",[61,0.254,220,1.652]],["body/classes/AppConfig.html",[3,0.249,4,0.249,9,0.249,21,0.581,22,1.776,23,1.824,30,1.096,35,1.058,37,1.168,38,0.024,39,0.731,40,0.854,41,0.963,60,0.36,61,0.324,155,0.015,156,0.019,157,0.015,159,3.26,162,3.36,164,2.456,165,2.456,169,2.897,172,1.326,173,2.934,174,2.934,175,2.934,176,2.934,220,2.649,221,4.483,222,3.26,223,4.704,224,4.233,225,5.483]],["title/modules/AppModule.html",[177,1.18,226,2.3]],["body/modules/AppModule.html",[3,0.192,4,0.192,9,0.192,32,2.585,38,0.025,49,0.74,50,0.447,58,1.889,60,0.22,61,0.25,129,1.087,136,2.317,155,0.012,156,0.016,157,0.012,177,1.158,179,1.319,180,1.746,181,3.231,182,2.969,183,2.215,184,1.51,191,2.827,192,2.056,193,1.41,195,2.229,200,2.257,204,2.229,223,2.508,226,4.546,227,2.845,228,2.845,229,2.845,230,2.845,231,2.845,232,3.77,233,3.648,234,3.356,235,3.356,236,2.508,237,2.508,238,4.614,239,3.912,240,2.508,241,4.614,242,3.356,243,3.356,244,3.356,245,3.356,246,2.827,247,2.845,248,2.827,249,2.845,250,3.356,251,3.356,252,1.889]],["title/modules/AppRoutingModule.html",[177,1.18,232,2.095]],["body/modules/AppRoutingModule.html",[3,0.234,4,0.234,9,0.234,38,0.025,49,0.691,50,0.546,60,0.269,61,0.305,155,0.014,156,0.018,157,0.014,179,1.611,184,1.844,195,1.98,204,2.546,206,1.844,208,2.757,209,3.545,210,3.032,211,1.722,212,3.28,232,3.23,246,3.23,247,3.474,248,3.23,249,3.474,253,4.098,254,3.474,255,3.94,256,5.271,257,4.098,258,4.098,259,3.23,260,4.098,261,4.098,262,3.474,263,3.474,264,3.474,265,4.098]],["title/guards/AuthGuard.html",[246,2.095,266,2.556]],["body/guards/AuthGuard.html",[3,0.221,4,0.221,9,0.221,11,1.427,21,0.516,25,1.362,26,1.873,30,0.974,32,2.53,35,0.981,37,1.362,38,0.025,39,0.852,40,0.792,41,1.122,44,1.039,49,0.637,50,0.516,58,2.183,60,0.254,61,0.288,62,1.427,155,0.014,156,0.018,157,0.014,161,3.194,211,1.629,216,2.608,246,3.116,255,4.501,267,2.898,268,3.287,269,2.898,270,4.007,271,3.877,272,2.863,273,4.31,274,5.105,275,5.105,276,3.877,277,2.898,278,1.546,279,3.877,280,2.898,281,4.31,282,3.877,283,1.873]],["title/components/ContainerComponent.html",[0,0.66,138,1.18]],["body/components/ContainerComponent.html",[0,0.73,1,0.513,2,0.925,3,0.109,4,0.109,5,0.862,6,0.862,7,0.862,8,0.862,9,0.109,11,1.12,12,1.827,13,0.862,14,2.637,15,2.505,16,2.827,17,1.368,19,1.368,21,0.255,22,0.985,23,1.704,25,0.815,26,1.827,28,2.081,30,0.481,32,1.81,35,0.907,37,0.513,38,0.025,39,0.634,40,0.671,41,0.423,44,0.513,45,0.862,49,0.589,50,0.255,56,1.968,57,1.431,58,1.078,60,0.126,61,0.142,62,0.705,93,1.288,98,1.431,100,2.544,101,3.364,104,2.544,105,1.623,106,1.173,107,1.288,110,1.288,111,1.173,112,2.045,113,2.544,114,3.364,115,1.431,116,1.431,117,2.045,118,3.161,119,2.273,120,1.431,123,1.288,129,0.62,130,1.368,131,1.368,132,0.862,133,1.938,134,0.862,135,0.862,136,0.661,137,0.862,138,1.487,139,0.862,140,0.62,141,0.862,142,0.62,143,1.702,144,0.862,145,0.661,146,0.862,147,0.62,148,0.862,149,0.661,150,0.862,151,0.661,152,2.114,153,0.862,154,0.862,155,0.016,156,0.011,157,0.007,166,1.81,193,1.278,196,1.623,211,0.804,252,1.078,270,3.213,272,2.13,277,2.827,284,1.623,285,4.869,286,3.782,287,3.041,288,1.915,289,5.002,290,2.242,291,3.041,292,1.915,293,1.078,294,0.996,295,1.915,296,1.915,297,3.041,298,1.431,299,1.915,300,2.578,301,1.915,302,3.041,303,1.623,304,1.915,305,3.782,306,2.544,307,1.915,308,3.041,309,4.308,310,1.623,311,1.915,312,1.915,313,4.189,314,3.207,315,2.578,316,3.92,317,3.041,318,2.273,319,2.273,320,1.431,321,2.273,322,2.045,323,2.273,324,2.578,325,1.431,326,3.041,327,1.623,328,2.827,329,1.915,330,1.623,331,1.431,332,1.431,333,1.431,334,1.623,335,1.431,336,1.431,337,1.431,338,1.431,339,1.431,340,1.915,341,1.915,342,3.782,343,1.915,344,3.041,345,2.578,346,1.623,347,1.623,348,1.623]],["title/modules/ContainerModule.html",[177,1.18,233,2.095]],["body/modules/ContainerModule.html",[1,1.657,2,1.42,3,0.154,4,0.154,9,0.154,25,0.721,35,0.519,37,0.721,38,0.025,39,0.451,40,0.419,41,0.594,44,0.721,49,0.737,50,0.358,53,1.649,60,0.177,61,0.2,129,0.872,138,1.362,149,1.362,151,1.362,155,0.009,156,0.014,157,0.009,164,2.221,165,1.515,177,0.929,179,1.057,180,1.4,181,2.861,182,1.515,183,2.16,184,2.101,191,2.417,192,1.649,193,1.13,195,1.905,200,1.81,202,2.948,203,1.81,204,2.255,205,3.344,206,1.211,220,2.644,233,4.08,252,2.221,283,1.3,290,3.076,298,2.011,349,2.281,350,2.281,351,2.691,352,2.281,353,2.691,354,3.505,355,3.328,356,3.076,357,2.011,358,3.944,359,2.691,360,3.944,361,2.691,362,4.669,363,4.669,364,3.944,365,1.649,366,2.691,367,2.691,368,2.691,369,2.691,370,1.81,371,1.81,372,2.653,373,2.691,374,2.653,375,2.691,376,2.281,377,2.011,378,4.669,379,2.691,380,3.944,381,3.944]],["title/modules/ContainerRoutingModule.html",[177,1.18,354,2.095]],["body/modules/ContainerRoutingModule.html",[3,0.274,4,0.274,9,0.274,38,0.025,49,0.652,50,0.638,60,0.314,61,0.356,155,0.017,156,0.02,157,0.017,179,1.882,184,2.155,195,2.313,204,2.806,206,2.155,208,3.221,209,3.907,210,3.254,211,2.012,214,3.58,354,3.56,382,4.789]],["title/injectables/ContainerService.html",[278,1.04,290,1.779]],["body/injectables/ContainerService.html",[3,0.221,4,0.221,9,0.221,21,0.516,22,1.647,23,1.951,30,0.974,35,1.095,37,1.039,38,0.025,39,0.65,40,0.883,41,0.856,49,0.637,50,0.516,60,0.254,61,0.288,62,1.427,65,2.646,155,0.014,156,0.018,157,0.014,162,2.376,164,2.863,165,2.183,166,2.136,220,2.909,278,1.546,290,2.646,293,2.863,294,2.646,320,2.898,325,4.241,370,2.608,371,2.608,383,2.183,384,3.287,385,5.673,386,5.673,387,5.084,388,5.3,389,3.877,390,2.183,391,3.877,392,3.877]],["title/components/GitProfileComponent.html",[0,0.66,142,1.108]],["body/components/GitProfileComponent.html",[0,1.013,1,0.892,2,1.395,3,0.19,4,0.19,5,1.497,6,1.497,7,1.497,8,1.497,9,0.19,11,1.689,12,2.536,13,1.497,14,2.991,15,2.792,17,2.064,19,2.064,21,0.443,25,1.229,28,2.734,30,1.32,35,0.886,38,0.024,39,0.769,44,0.892,45,1.497,49,0.374,50,0.443,60,0.218,61,0.248,129,1.078,130,2.064,131,2.064,132,1.497,133,2.546,134,1.497,135,1.497,136,1.149,137,1.497,138,1.149,139,1.497,140,1.078,141,1.497,142,1.833,143,3.016,144,1.497,145,1.149,146,1.497,147,1.078,148,1.497,149,1.149,150,1.497,151,1.149,152,1.497,153,1.497,154,1.497,155,0.012,156,0.016,157,0.012,393,3.532,394,3.532,395,2.821,396,3.186,397,5.25,398,4.588,399,3.328,400,3.328,401,4.588]],["title/components/GitResultComponent.html",[0,0.66,145,1.18]],["body/components/GitResultComponent.html",[0,0.92,1,0.747,2,1.231,3,0.159,4,0.159,5,1.255,6,1.255,7,1.255,8,1.255,9,0.159,11,1.49,12,2.302,13,1.255,14,2.889,15,2.698,17,1.822,19,1.822,21,0.371,23,0.848,25,1.085,28,2.526,30,1.198,35,0.92,38,0.025,39,0.877,40,0.434,44,0.747,45,1.255,49,0.455,50,0.371,60,0.183,61,0.207,101,1.876,102,2.085,119,2.085,126,1.876,127,2.085,129,0.903,130,1.822,131,1.822,132,1.255,133,2.353,134,1.255,135,1.255,136,0.963,137,1.255,138,0.963,139,1.255,140,0.903,141,1.255,142,0.903,143,2.852,144,1.255,145,1.805,146,1.255,147,0.903,148,1.255,149,0.963,150,1.255,151,0.963,152,1.255,153,1.255,154,1.255,155,0.017,156,0.014,157,0.01,393,3.517,396,1.57,402,3.909,403,2.364,404,4.766,405,4.048,406,4.048,407,4.151,408,4.048,409,2.48,410,2.789,411,4.048,412,1.709,413,4.048,414,4.048,415,4.048,416,4.048,417,3.432,418,3.432,419,3.432,420,4.048,421,4.048,422,4.048,423,4.048,424,4.048,425,2.789]],["title/components/GitSearchComponent.html",[0,0.66,147,1.108]],["body/components/GitSearchComponent.html",[0,0.919,1,0.745,2,1.229,3,0.159,4,0.159,5,1.252,6,1.252,7,1.252,8,1.252,9,0.159,11,1.488,12,2.299,13,1.252,14,2.888,15,2.696,17,1.819,19,1.819,21,0.371,22,1.309,23,1.896,25,1.083,28,2.524,30,0.699,35,1.071,37,0.745,38,0.024,39,0.798,40,0.741,41,0.614,44,1.083,45,1.819,49,0.534,50,0.371,60,0.183,61,0.207,62,1.024,129,0.901,130,1.819,131,1.819,132,1.252,133,2.35,134,1.252,135,1.252,136,0.961,137,1.252,138,0.961,139,1.252,140,0.901,141,1.252,142,0.901,143,2.851,144,1.252,145,0.961,146,1.252,147,1.692,148,1.252,149,0.961,150,1.252,151,0.961,152,1.252,153,1.252,154,1.252,155,0.014,156,0.014,157,0.01,166,1.698,259,3.66,355,2.941,376,2.359,393,3.893,396,1.567,407,3.558,409,2.477,412,1.705,426,3.893,427,2.359,428,4.76,429,4.042,430,5.224,431,2.782,432,4.042,433,2.719,434,2.782,435,2.782,436,2.782,437,4.042,438,2.782,439,2.782]],["title/components/GithubComponent.html",[0,0.66,140,1.108]],["body/components/GithubComponent.html",[0,1.042,1,0.94,2,1.447,3,0.2,4,0.2,5,1.579,6,1.579,7,1.579,8,1.579,9,0.2,11,1.752,12,2.607,13,1.579,14,3.019,15,2.819,17,2.141,19,2.141,21,0.468,25,1.275,28,2.795,30,1.357,35,0.918,38,0.024,39,0.798,44,0.94,45,1.579,49,0.394,50,0.468,60,0.23,61,0.261,129,1.137,130,2.141,131,2.141,132,1.579,133,2.604,134,1.579,135,1.579,136,1.212,137,1.579,138,1.212,139,1.579,140,1.874,141,1.579,142,1.137,143,2.429,144,1.579,145,1.212,146,1.579,147,1.137,148,1.579,149,1.212,150,1.579,151,1.212,152,1.579,153,1.579,154,1.579,155,0.012,156,0.017,157,0.012,433,3.2,440,2.975,441,5.397,442,4.758,443,3.51,444,3.51]],["title/modules/GithubModule.html",[177,1.18,445,2.3]],["body/modules/GithubModule.html",[1,1.734,2,1.578,3,0.186,4,0.186,9,0.186,38,0.025,49,0.76,50,0.434,53,1.996,60,0.214,61,0.242,129,1.055,140,1.464,142,1.464,145,1.56,147,1.464,155,0.011,156,0.016,157,0.011,177,1.124,179,1.28,180,1.695,181,3.181,182,1.834,183,1.368,184,2.336,191,2.77,192,1.996,193,1.368,195,2.184,197,3.832,198,2.761,200,2.191,202,3.379,203,2.191,204,2.184,206,1.466,394,2.191,402,2.435,426,2.191,445,4.353,446,2.761,447,3.257,448,3.257,449,2.761,450,3.736,451,2.435,452,4.52,453,3.257,454,4.52,455,3.257,456,4.52,457,3.257,458,4.52,459,3.257,460,4.52,461,3.257,462,4.52,463,4.401,464,2.761,465,3.257,466,2.761,467,3.257,468,2.761]],["title/modules/GithubRoutingModule.html",[177,1.18,450,2.095]],["body/modules/GithubRoutingModule.html",[0,1.114,3,0.229,4,0.229,9,0.229,38,0.025,49,0.71,50,0.535,60,0.264,61,0.299,140,1.686,142,1.686,147,1.686,155,0.014,156,0.018,157,0.014,179,1.579,184,1.808,195,1.941,204,2.514,206,1.808,208,2.702,209,3.5,210,3.003,211,1.688,212,3.437,213,3.406,214,3.003,262,3.406,263,3.406,264,3.406,394,2.702,396,2.262,426,2.702,450,3.189,463,4.411,464,3.406,466,3.406,468,3.406,469,4.017]],["title/injectables/GithubService.html",[278,1.04,355,1.925]],["body/injectables/GithubService.html",[3,0.123,4,0.123,9,0.123,21,0.288,22,1.083,23,1.869,25,0.896,26,2.405,30,0.543,35,1.016,37,1.334,38,0.025,39,0.835,40,0.82,41,1.099,44,1.233,49,0.654,50,0.288,60,0.142,61,0.161,62,0.796,65,2.396,66,2.507,73,2.836,91,2.5,155,0.014,156,0.012,157,0.008,164,2.303,165,1.217,166,2.212,183,0.908,206,1.505,212,1.217,220,2.224,259,1.325,278,1.017,283,2.224,293,1.217,294,1.125,355,1.883,356,2.396,365,1.325,370,1.454,371,1.454,377,1.616,383,1.217,396,2.303,407,3.058,409,3.15,412,2.507,470,1.833,471,4.091,472,5.821,473,3.345,474,3.345,475,3.345,476,3.345,477,1.833,478,3.468,479,3.903,480,3.345,481,2.836,482,3.345,483,2.162,484,4.808,485,3.345,486,2.162,487,3.345,488,2.162,489,3.345,490,2.162,491,3.345,492,1.833,493,1.616,494,1.454,495,2.5,496,1.833,497,2.25,498,3.345,499,3.345,500,3.345,501,2.162,502,3.345,503,1.833,504,2.162,505,1.616,506,2.162,507,2.162,508,2.5,509,2.836,510,2.162,511,2.162,512,2.162,513,3.345,514,2.162,515,2.162,516,3.345,517,2.162,518,2.162,519,2.162,520,2.162,521,2.162,522,2.162,523,2.162,524,2.162,525,2.162,526,3.345,527,2.162,528,2.162,529,2.162,530,2.162,531,3.345,532,2.162,533,1.833,534,2.162,535,2.162,536,2.162,537,2.162,538,3.345,539,2.162,540,2.162]],["title/interfaces/IAccountModel.html",[56,1.779,172,1.04]],["body/interfaces/IAccountModel.html",[3,0.218,4,0.218,9,0.218,21,0.508,22,1.63,23,1.891,38,0.024,39,1.043,40,0.969,41,1.49,56,2.929,60,0.33,61,0.284,66,3.812,68,4.65,69,4.65,155,0.013,156,0.018,157,0.013,158,2.567,160,2.853,161,3.502,162,2.339,166,2.878,169,3.194,172,1.161,173,2.567,174,2.567,175,2.567,176,2.567,541,1.986]],["title/interfaces/IAppConfig.html",[172,1.04,224,2.3]],["body/interfaces/IAppConfig.html",[3,0.265,4,0.265,9,0.265,21,0.619,22,1.847,23,1.412,38,0.024,40,0.723,60,0.374,61,0.345,155,0.016,156,0.02,157,0.016,162,2.845,169,3.108,172,1.412,173,3.123,174,3.123,175,3.123,176,3.123,220,2.243,221,3.471,222,3.471,223,4.936,224,4.15,541,2.416]],["title/interfaces/IGitProfile.html",[172,1.04,409,1.779]],["body/interfaces/IGitProfile.html",[3,0.12,4,0.12,9,0.12,21,0.279,22,1.057,38,0.024,39,0.759,40,1.072,41,1.566,49,0.235,60,0.138,91,3.384,155,0.007,156,0.011,157,0.007,166,2.992,169,1.937,172,0.637,409,1.699,412,1.284,417,3.838,418,3.838,419,3.838,495,3.384,496,1.776,541,1.09,542,1.566,543,1.776,544,4.527,545,4.527,546,4.527,547,4.527,548,4.527,549,4.527,550,4.527,551,4.527,552,4.527,553,4.527,554,4.527,555,4.527,556,4.527,557,4.527,558,4.527,559,4.527,560,4.527,561,4.527,562,4.527,563,4.527,564,4.527,565,4.527,566,4.527,567,4.527,568,3.384,569,5.489]],["title/interfaces/IGitSearch.html",[172,1.04,497,2.3]],["body/interfaces/IGitSearch.html",[3,0.259,4,0.259,9,0.259,21,0.605,22,1.821,38,0.024,40,0.951,49,0.51,60,0.298,111,3.912,155,0.016,156,0.02,157,0.016,169,2.951,172,1.38,396,2.556,409,3.322,412,2.782,497,3.782,541,2.362,542,3.393,569,5.178,570,3.849,571,6.383,572,6.383]],["title/interfaces/IHttpRequest.html",[172,1.04,573,2.3]],["body/interfaces/IHttpRequest.html",[3,0.255,4,0.255,9,0.255,21,0.596,22,1.805,38,0.024,40,0.945,41,1.402,49,0.502,60,0.294,155,0.016,156,0.019,157,0.016,166,2.798,172,1.36,212,3.575,505,4.747,508,4.883,541,2.328,573,3.747,574,3.792,575,3.792,576,4.271,577,4.473]],["title/interfaces/ISearchParams.html",[172,1.04,576,2.3]],["body/interfaces/ISearchParams.html",[3,0.287,4,0.287,9,0.287,35,0.97,38,0.023,60,0.33,155,0.018,156,0.021,157,0.018,166,2.776,172,1.528,541,2.615,576,4.022,578,5.07,579,4.26,580,5.025,581,5.98,582,5.025]],["title/interceptors/IdentityInterceptor.html",[372,2.3,583,2.556]],["body/interceptors/IdentityInterceptor.html",[3,0.205,4,0.205,9,0.205,11,1.323,21,0.479,25,1.295,35,0.693,37,0.962,38,0.025,39,0.602,40,0.559,41,0.793,44,0.962,49,0.705,50,0.479,60,0.236,61,0.267,65,1.869,84,2.685,109,2.685,155,0.019,156,0.017,157,0.013,183,1.509,206,2.175,278,1.47,283,2.638,306,3.674,310,3.045,365,2.201,372,3.251,390,2.023,492,3.045,493,2.685,494,2.416,568,2.685,584,3.045,585,3.045,586,4.097,587,4.097,588,4.952,589,4.952,590,3.592,591,4.097,592,4.083,593,3.045,594,4.097,595,5.462,596,2.416,597,3.045,598,3.592,599,4.097,600,3.592,601,3.592,602,3.592,603,3.045,604,3.592,605,3.592,606,3.592,607,3.592]],["title/injectables/IdentityService.html",[32,1.437,278,1.04]],["body/injectables/IdentityService.html",[3,0.147,4,0.147,9,0.147,16,3.76,21,0.343,22,1.236,23,1.942,25,1.022,26,2.43,30,0.646,32,1.603,35,1.086,37,1.022,38,0.025,39,0.762,40,0.783,41,0.842,44,1.218,49,0.654,50,0.343,56,3.114,57,1.922,60,0.169,61,0.191,62,0.947,65,1.985,66,1.576,76,2.18,84,1.922,87,2.18,155,0.016,156,0.013,157,0.009,161,2.832,183,1.08,211,1.08,212,1.448,252,1.448,254,2.18,259,1.576,270,3.57,278,1.16,283,2.197,293,2.148,294,1.985,300,2.18,306,1.73,356,2.618,377,1.922,383,1.448,388,4.555,390,1.448,477,2.18,481,3.234,484,4.771,493,1.922,494,1.73,505,1.922,509,2.18,608,2.18,609,4.547,610,5.03,611,3.815,612,4.264,613,3.815,614,2.572,615,3.815,616,2.572,617,2.572,618,2.572,619,3.399,620,2.572,621,2.572,622,2.572,623,2.572,624,2.572,625,2.572,626,2.572,627,2.572,628,3.815,629,2.572,630,3.815,631,2.572,632,2.572,633,2.572,634,3.815,635,2.572,636,2.572,637,2.572,638,2.572,639,3.815,640,2.572,641,2.572,642,2.572]],["title/injectables/MessageService.html",[34,1.925,278,1.04]],["body/injectables/MessageService.html",[3,0.178,4,0.178,9,0.178,21,0.415,23,1.541,25,1.174,30,0.783,33,4.297,34,2.467,35,0.846,37,1.174,38,0.025,39,0.735,40,0.936,41,0.967,44,0.835,45,1.402,49,0.569,50,0.415,54,4.111,55,2.642,60,0.205,61,0.232,62,1.147,77,2.642,90,2.642,122,2.329,155,0.011,156,0.015,157,0.011,166,2.525,193,1.309,216,2.096,236,2.329,237,2.329,252,3.097,278,1.332,280,2.329,293,1.754,294,1.622,322,2.096,330,4.913,383,1.754,619,3.276,643,2.642,644,4.382,645,3.116,646,5.5,647,3.116,648,4.382,649,4.382,650,3.116,651,5.069,652,3.116,653,3.116,654,3.116,655,3.116,656,3.116,657,3.116,658,2.642,659,3.116,660,3.116,661,3.116,662,3.116,663,3.116,664,3.116,665,3.116,666,3.116,667,3.116,668,3.116,669,3.116,670,3.116,671,5.5,672,3.116,673,5.5,674,3.116,675,3.116,676,3.116,677,3.116]],["title/components/NavbarComponent.html",[0,0.66,149,1.18]],["body/components/NavbarComponent.html",[0,0.888,1,0.702,2,1.176,3,0.15,4,0.15,5,1.179,6,1.179,7,1.179,8,1.179,9,0.15,11,1.424,12,2.221,13,1.179,14,2.851,15,2.694,17,1.741,19,1.741,21,0.349,23,1.398,25,1.036,28,2.453,30,0.659,32,2.133,35,0.888,37,0.702,38,0.025,39,0.771,40,0.408,41,0.579,44,1.036,45,1.741,49,0.516,50,0.349,58,1.476,60,0.172,61,0.195,62,0.965,93,1.763,100,1.763,104,3.093,106,1.606,107,1.763,110,1.763,111,1.606,112,1.763,113,2.602,114,3.093,117,1.763,118,1.763,123,3.093,126,1.763,128,1.959,129,0.849,130,1.741,131,1.741,132,1.179,133,2.284,134,1.179,135,1.179,136,0.905,137,1.179,138,0.905,139,1.179,140,0.849,141,1.179,142,0.849,143,2.069,144,1.179,145,0.905,146,1.179,147,0.849,148,1.179,149,1.753,150,1.179,151,0.905,152,1.179,153,1.179,154,1.179,155,0.009,156,0.013,157,0.009,193,1.101,269,1.959,272,2.178,313,2.892,316,1.959,318,1.959,319,1.959,321,1.959,322,1.763,323,1.959,327,4.591,328,2.892,331,3.437,332,2.892,333,2.892,335,3.437,336,1.959,337,3.795,338,1.959,339,1.959,612,4.304,678,2.222,679,4.598,680,3.869,681,2.621,682,2.621,683,2.621,684,2.621,685,3.869,686,3.869,687,2.621,688,2.621,689,2.222,690,4.598,691,2.621,692,3.28,693,2.222,694,2.222,695,2.621,696,2.222,697,2.621]],["title/interceptors/NetworkInterceptor.html",[374,2.3,583,2.556]],["body/interceptors/NetworkInterceptor.html",[3,0.229,4,0.229,9,0.229,11,1.479,21,0.535,25,1.394,35,0.775,37,1.076,38,0.025,39,0.673,40,0.626,41,0.887,44,1.076,49,0.71,50,0.535,60,0.264,61,0.299,155,0.014,156,0.018,157,0.014,183,1.688,278,1.582,283,1.941,306,3.882,365,2.462,374,3.5,390,2.262,494,2.702,568,3.003,584,3.406,586,4.411,587,4.411,588,5.175,589,5.175,591,4.411,592,4.314,593,3.406,594,4.411,596,2.702,597,3.406,599,3.406,603,3.406,698,3.406,699,4.017,700,4.017,701,4.017]],["title/injectables/NetworkService.html",[278,1.04,356,1.779]],["body/injectables/NetworkService.html",[3,0.215,4,0.215,9,0.215,21,0.501,23,1.699,25,1.334,26,1.815,30,0.945,35,0.961,37,1.497,38,0.025,39,0.835,40,0.87,41,1.099,44,1.007,49,0.695,50,0.501,60,0.247,61,0.28,62,1.384,109,2.809,155,0.013,156,0.017,157,0.013,164,3.145,165,2.116,220,2.874,278,1.514,283,1.815,356,2.592,365,2.303,370,2.528,371,2.528,383,2.116,390,2.116,478,4.222,479,5.043,508,2.809,573,4.001,592,4.176,702,3.186,703,3.758,704,3.758,705,4.981,706,3.758,707,3.758,708,3.758,709,3.758,710,3.758,711,3.758,712,3.758,713,3.758,714,3.758]],["title/guards/SessionGuard.html",[248,2.095,266,2.556]],["body/guards/SessionGuard.html",[3,0.221,4,0.221,9,0.221,11,1.427,21,0.516,25,1.362,26,1.873,30,0.974,32,2.53,35,0.981,37,1.362,38,0.025,39,0.852,40,0.792,41,1.122,44,1.039,49,0.637,50,0.516,58,2.183,60,0.254,61,0.288,62,1.427,155,0.014,156,0.018,157,0.014,161,3.194,169,1.873,211,1.629,216,2.608,248,3.116,255,4.501,267,2.898,269,2.898,270,4.007,272,2.863,273,4.31,274,5.105,275,5.105,277,2.898,278,1.546,280,2.898,281,4.31,283,1.873,715,3.287,716,3.877,717,3.877,718,3.877]],["title/components/SidenavComponent.html",[0,0.66,151,1.18]],["body/components/SidenavComponent.html",[0,0.744,1,0.528,2,0.946,3,0.113,4,0.113,5,0.887,6,0.887,7,0.887,8,0.887,9,0.113,11,1.145,12,1.862,13,0.887,14,2.658,15,2.524,17,1.4,19,1.4,21,0.262,22,1.008,23,1.54,25,0.833,26,0.952,28,2.115,30,0.495,35,0.845,37,0.528,38,0.025,39,0.646,40,0.484,41,0.435,44,0.833,45,1.4,49,0.491,50,0.262,60,0.129,61,0.147,62,0.725,93,1.325,98,1.473,100,2.092,101,1.325,102,1.473,103,1.67,104,2.092,106,1.906,107,1.325,110,2.092,111,1.208,112,1.325,113,2.592,114,2.944,115,1.473,116,1.473,117,1.325,118,2.092,120,1.473,122,2.325,123,2.092,124,3.711,126,2.092,127,1.473,128,1.473,129,0.638,130,1.4,131,1.4,132,0.887,133,1.969,134,0.887,135,0.887,136,0.68,137,0.887,138,0.68,139,0.887,140,0.638,141,0.887,142,0.638,143,1.734,144,0.887,145,0.68,146,0.887,147,0.638,148,0.887,149,0.68,150,0.887,151,1.511,152,2.473,153,0.887,154,0.887,155,0.007,156,0.011,157,0.007,161,2.17,169,1.503,193,2.228,211,0.828,259,1.906,270,3.249,285,2.637,290,2.278,298,1.473,303,1.67,313,3.786,314,1.67,316,2.325,318,1.473,319,1.473,320,1.473,321,3.963,322,3.566,323,3.963,324,1.67,325,2.325,328,2.881,331,3.786,332,3.562,333,1.473,334,2.637,335,3.786,336,1.473,337,3.963,338,2.881,339,2.881,345,3.267,346,1.67,347,1.67,348,1.67,533,2.637,689,2.637,692,3.711,693,2.637,694,1.67,696,2.637,719,1.67,720,3.854,721,3.111,722,4.377,723,1.97,724,3.111,725,1.97,726,1.97,727,3.854,728,1.97,729,3.111,730,1.97,731,1.97,732,3.111,733,1.97,734,3.111,735,1.97,736,1.97,737,1.97,738,1.97,739,1.97,740,1.97,741,1.97,742,1.97,743,1.97,744,1.97,745,1.97,746,1.97]],["title/coverage.html",[747,3.962]],["body/coverage.html",[0,1.19,1,0.713,2,1.411,9,0.152,10,2.256,32,1.118,34,1.498,38,0.025,40,0.414,56,1.385,61,0.291,65,1.385,136,0.919,138,0.919,140,0.862,142,0.862,145,0.919,147,0.862,149,0.919,151,0.919,155,0.009,156,0.014,157,0.009,158,1.79,160,2.924,172,1.791,194,1.989,215,2.256,220,1.286,221,2.924,222,2.924,224,1.79,246,1.631,248,1.631,266,2.924,268,2.256,278,1.657,284,2.256,290,1.385,315,5.965,355,1.498,356,1.385,357,1.989,372,1.79,374,1.79,384,2.256,393,3.12,394,1.79,395,2.256,402,1.989,403,2.256,409,1.385,426,1.79,427,2.256,440,2.256,451,1.989,470,2.256,495,1.989,497,1.79,542,3.468,543,2.256,570,2.256,573,1.79,574,2.256,575,2.256,576,1.79,578,2.256,579,2.256,583,2.924,585,2.256,596,2.631,608,2.256,643,2.256,678,2.256,698,2.256,702,2.256,715,2.256,719,2.256,747,2.256,748,2.661,749,2.661,750,2.661,751,5.114,752,6.167,753,6.27,754,5.114,755,5.449,756,2.661,757,5.89,758,3.317,759,3.317,760,3.317,761,4.639,762,2.661,763,2.661,764,2.661,765,3.317,766,2.256,767,2.256,768,2.661,769,2.661]],["title/dependencies.html",[180,2.141,770,2.852]],["body/dependencies.html",[38,0.025,50,0.553,53,2.546,106,2.546,155,0.014,156,0.019,157,0.014,180,2.162,182,2.339,203,2.794,211,1.745,236,3.105,237,3.105,239,4.507,240,3.974,390,2.339,771,4.154,772,5.705,773,4.154,774,4.154,775,4.154,776,4.154,777,4.154,778,4.154,779,4.154,780,4.154,781,4.154,782,4.154,783,4.154,784,4.154,785,4.154,786,4.154,787,4.154,788,4.154,789,4.154,790,4.154,791,4.154,792,4.154,793,4.154,794,4.154,795,4.154,796,4.154,797,4.154,798,4.154,799,4.154,800,4.154]],["title/miscellaneous/enumerations.html",[801,1.918,802,3.488]],["body/miscellaneous/enumerations.html",[3,0.286,21,0.667,38,0.023,54,4.459,79,4.243,155,0.017,156,0.021,157,0.017,183,2.506,272,3.359,294,3.104,433,4.012,801,3.366,802,4.243,803,5.004,804,5.004,805,5.004,806,5.004,807,5.004,808,5.004]],["title/index.html",[21,0.38,809,2.852,810,2.852]],["body/index.html",[0,1.093,4,0.221,15,1.624,38,0.018,39,0.648,65,2.011,155,0.013,156,0.018,157,0.013,193,1.624,772,3.277,811,3.865,812,5.074,813,3.865,814,5.664,815,5.664,816,3.865,817,3.865,818,5.074,819,6.246,820,6.533,821,3.865,822,3.865,823,3.865,824,3.865,825,3.865,826,3.865,827,3.865,828,3.865,829,3.865,830,3.865,831,5.664,832,5.664,833,3.865,834,6.246,835,3.865,836,3.865,837,3.865,838,3.865,839,3.865,840,3.865,841,3.277,842,5.074,843,5.074,844,6.014,845,3.865,846,5.074,847,5.074,848,3.865,849,6.014,850,3.865,851,3.865,852,3.865,853,5.664,854,3.865,855,3.865,856,3.865,857,2.889,858,3.865,859,3.865,860,3.865]],["title/modules.html",[179,1.837]],["body/modules.html",[38,0.02,155,0.016,156,0.02,157,0.016,178,3.184,179,1.86,190,2.901,226,3.184,232,2.901,233,2.901,240,4.841,354,2.901,445,3.184,450,2.901,861,6.476,862,6.476,863,6.9,864,6.476,865,6.476]],["title/overview.html",[857,3.494]],["body/overview.html",[1,1.808,2,1.009,32,2.203,34,2.952,38,0.024,129,1.075,136,2.169,155,0.012,156,0.016,157,0.012,159,2.481,177,1.146,178,4.371,179,1.304,180,1.727,181,2.034,182,1.869,183,1.394,184,1.493,185,2.814,186,2.814,187,2.814,188,2.814,189,2.814,190,3.213,191,2.806,192,2.034,193,1.394,210,1.727,226,4.468,227,2.814,228,2.814,229,2.814,230,2.814,231,2.814,232,3.213,233,4.16,267,2.481,290,2.728,349,2.814,350,2.814,352,2.814,354,3.213,355,2.952,356,2.728,383,1.869,445,4.226,446,2.814,449,2.814,450,3.213,503,2.814,541,1.727,658,3.882,857,2.481,866,3.319,867,3.319,868,3.319,869,3.319]],["title/routes.html",[210,2.432]],["body/routes.html",[38,0.022,155,0.019,156,0.022,157,0.019,210,2.862]],["title/miscellaneous/variables.html",[801,1.918,870,3.488]],["body/miscellaneous/variables.html",[1,0.932,2,1.891,21,0.464,38,0.025,40,1.022,138,1.201,140,1.127,142,1.127,145,1.201,147,1.127,149,1.201,151,1.201,155,0.012,156,0.016,157,0.012,194,2.601,252,2.663,272,2.663,293,3.646,294,3.369,357,2.601,433,3.181,451,2.601,596,3.878,619,2.601,758,2.95,759,4.888,760,2.95,765,2.95,766,4.01,767,4.01,801,2.341,841,4.01,870,2.95,871,3.48,872,3.48,873,3.48,874,4.73,875,4.73,876,4.73,877,3.48,878,3.48,879,3.48,880,5.766,881,5.766,882,4.73,883,4.73]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":315,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/73",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":333,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["1",{"_index":518,"title":{},"body":{"injectables/GithubService.html":{}}}],["1.16.1",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":339,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["100",{"_index":533,"title":{},"body":{"injectables/GithubService.html":{},"components/SidenavComponent.html":{}}}],["1000",{"_index":656,"title":{},"body":{"injectables/MessageService.html":{}}}],["100px",{"_index":99,"title":{},"body":{"components/AccountComponent.html":{}}}],["100vh",{"_index":314,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["100vw",{"_index":317,"title":{},"body":{"components/ContainerComponent.html":{}}}],["10px",{"_index":123,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["11.0.0",{"_index":772,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.2.4",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["11.3.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":869,"title":{},"body":{"overview.html":{}}}],["13.2.0",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["1500",{"_index":669,"title":{},"body":{"injectables/MessageService.html":{}}}],["15px",{"_index":105,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{}}}],["16px",{"_index":125,"title":{},"body":{"components/AccountComponent.html":{}}}],["1].id",{"_index":521,"title":{},"body":{"injectables/GithubService.html":{}}}],["1px",{"_index":735,"title":{},"body":{"components/SidenavComponent.html":{}}}],["2",{"_index":658,"title":{},"body":{"injectables/MessageService.html":{},"overview.html":{}}}],["2.0.0",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["20px",{"_index":128,"title":{},"body":{"components/AccountComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["24px",{"_index":108,"title":{},"body":{"components/AccountComponent.html":{}}}],["250ms",{"_index":323,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["250px",{"_index":326,"title":{},"body":{"components/ContainerComponent.html":{}}}],["3.6.0",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["35px",{"_index":334,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["4.1.0",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":328,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["5",{"_index":503,"title":{},"body":{"injectables/GithubService.html":{},"overview.html":{}}}],["50",{"_index":102,"title":{},"body":{"components/AccountComponent.html":{},"components/GitResultComponent.html":{},"components/SidenavComponent.html":{}}}],["50px",{"_index":119,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/GitResultComponent.html":{}}}],["5px",{"_index":737,"title":{},"body":{"components/SidenavComponent.html":{}}}],["6.6.0",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":868,"title":{},"body":{"overview.html":{}}}],["8",{"_index":866,"title":{},"body":{"overview.html":{}}}],["80px",{"_index":342,"title":{},"body":{"components/ContainerComponent.html":{}}}],["8px",{"_index":733,"title":{},"body":{"components/SidenavComponent.html":{}}}],["9",{"_index":867,"title":{},"body":{"overview.html":{}}}],["9.6.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["absolute",{"_index":693,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["account",{"_index":16,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"injectables/IdentityService.html":{}}}],["account'},{'name",{"_index":135,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["account.component.html",{"_index":20,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.component.scss",{"_index":18,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.pass",{"_index":638,"title":{},"body":{"injectables/IdentityService.html":{}}}],["account.user",{"_index":634,"title":{},"body":{"injectables/IdentityService.html":{}}}],["account/account",{"_index":199,"title":{},"body":{"modules/AccountModule.html":{}}}],["account/account.component",{"_index":201,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["accountcomponent",{"_index":1,"title":{"components/AccountComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accountmodel",{"_index":158,"title":{"classes/AccountModel.html":{}},"body":{"classes/AccountModel.html":{},"interfaces/IAccountModel.html":{},"coverage.html":{}}}],["accountmodule",{"_index":178,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules.html":{},"overview.html":{}}}],["accountroutingmodule",{"_index":190,"title":{"modules/AccountRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["activatedroutesnapshot",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{},"guards/SessionGuard.html":{}}}],["active",{"_index":745,"title":{},"body":{"components/SidenavComponent.html":{}}}],["active:hover",{"_index":746,"title":{},"body":{"components/SidenavComponent.html":{}}}],["actual_component",{"_index":154,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["align",{"_index":110,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["amount",{"_index":338,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["angular",{"_index":814,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":203,"title":{},"body":{"modules/AccountModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":365,"title":{},"body":{"modules/ContainerModule.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{}}}],["angular/compiler",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":50,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":53,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":211,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/IdentityService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":136,"title":{"components/AppComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":220,"title":{"classes/AppConfig.html":{}},"body":{"classes/AppConfig.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"interfaces/IAppConfig.html":{},"injectables/NetworkService.html":{},"coverage.html":{}}}],["appmodule",{"_index":226,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":232,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":164,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/NetworkService.html":{}}}],["args.expandsidenav",{"_index":392,"title":{},"body":{"injectables/ContainerService.html":{}}}],["args[key",{"_index":176,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{}}}],["array",{"_index":491,"title":{},"body":{"injectables/GithubService.html":{}}}],["artifacts",{"_index":835,"title":{},"body":{"index.html":{}}}],["assets/accounts.json",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":472,"title":{},"body":{"injectables/GithubService.html":{}}}],["auth",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/IdentityService.html":{}}}],["authchanged",{"_index":609,"title":{},"body":{"injectables/IdentityService.html":{}}}],["authguard",{"_index":246,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["auto",{"_index":100,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["automatically",{"_index":825,"title":{},"body":{"index.html":{}}}],["available",{"_index":865,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":425,"title":{},"body":{"components/GitResultComponent.html":{}}}],["avatar_url",{"_index":544,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["await",{"_index":531,"title":{},"body":{"injectables/GithubService.html":{}}}],["awesome",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["background",{"_index":335,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["badgemodule",{"_index":452,"title":{},"body":{"modules/GithubModule.html":{}}}],["baseurl",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":319,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["blog",{"_index":545,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["body",{"_index":109,"title":{},"body":{"components/AccountComponent.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/NetworkService.html":{}}}],["body.params",{"_index":714,"title":{},"body":{"injectables/NetworkService.html":{}}}],["body.provider",{"_index":713,"title":{},"body":{"injectables/NetworkService.html":{}}}],["body.provider}/${body.path",{"_index":712,"title":{},"body":{"injectables/NetworkService.html":{}}}],["boolean",{"_index":169,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["bootstrap",{"_index":182,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":126,"title":{},"body":{"components/AccountComponent.html":{},"components/GitResultComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["bottom",{"_index":662,"title":{},"body":{"injectables/MessageService.html":{}}}],["break",{"_index":673,"title":{},"body":{"injectables/MessageService.html":{}}}],["browse",{"_index":863,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":124,"title":{},"body":{"components/AccountComponent.html":{},"components/SidenavComponent.html":{}}}],["btn:active",{"_index":740,"title":{},"body":{"components/SidenavComponent.html":{}}}],["btn:hover",{"_index":689,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["build",{"_index":834,"title":{},"body":{"index.html":{}}}],["buttonmodule",{"_index":454,"title":{},"body":{"modules/GithubModule.html":{}}}],["calc(100",{"_index":344,"title":{},"body":{"components/ContainerComponent.html":{}}}],["calc(100vh",{"_index":329,"title":{},"body":{"components/ContainerComponent.html":{}}}],["canactivate",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/SessionGuard.html":{}}}],["canactivate(route",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{},"guards/SessionGuard.html":{}}}],["capitalize",{"_index":341,"title":{},"body":{"components/ContainerComponent.html":{}}}],["card",{"_index":94,"title":{},"body":{"components/AccountComponent.html":{}}}],["case",{"_index":671,"title":{},"body":{"injectables/MessageService.html":{}}}],["catch((error",{"_index":78,"title":{},"body":{"components/AccountComponent.html":{}}}],["center",{"_index":112,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["change",{"_index":827,"title":{},"body":{"index.html":{}}}],["check",{"_index":856,"title":{},"body":{"index.html":{}}}],["children",{"_index":213,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/GithubRoutingModule.html":{}}}],["class",{"_index":61,"title":{"classes/AccountModel.html":{},"classes/AppConfig.html":{}},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["classes",{"_index":159,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"overview.html":{}}}],["cli",{"_index":815,"title":{},"body":{"index.html":{}}}],["client/app",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["client/app.component",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_accountmodule",{"_index":185,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_declarations",{"_index":186,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_exports",{"_index":189,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":187,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_providers",{"_index":188,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_containermodule",{"_index":349,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_declarations",{"_index":351,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_exports",{"_index":353,"title":{},"body":{"modules/ContainerModule.html":{}}}],["cluster_containermodule_imports",{"_index":352,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_containermodule_providers",{"_index":350,"title":{},"body":{"modules/ContainerModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":446,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_declarations",{"_index":448,"title":{},"body":{"modules/GithubModule.html":{}}}],["cluster_githubmodule_exports",{"_index":447,"title":{},"body":{"modules/GithubModule.html":{}}}],["cluster_githubmodule_imports",{"_index":449,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["code",{"_index":829,"title":{},"body":{"index.html":{}}}],["collapsed",{"_index":320,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/SidenavComponent.html":{}}}],["color",{"_index":331,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["column",{"_index":116,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["command",{"_index":858,"title":{},"body":{"index.html":{}}}],["common.scss",{"_index":93,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["commonmodule",{"_index":202,"title":{},"body":{"modules/AccountModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{}}}],["component",{"_index":0,"title":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubRoutingModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":134,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":371,"title":{},"body":{"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/NetworkService.html":{}}}],["config.ts",{"_index":222,"title":{},"body":{"classes/AppConfig.html":{},"interfaces/IAppConfig.html":{},"coverage.html":{}}}],["config.ts:6",{"_index":225,"title":{},"body":{"classes/AppConfig.html":{}}}],["const",{"_index":206,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["constructor(args",{"_index":162,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"injectables/ContainerService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{}}}],["constructor(container",{"_index":723,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(github",{"_index":431,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["constructor(http",{"_index":703,"title":{},"body":{"injectables/NetworkService.html":{}}}],["constructor(identity",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"guards/SessionGuard.html":{}}}],["constructor(identtiy",{"_index":31,"title":{},"body":{"components/AccountComponent.html":{}}}],["constructor(network",{"_index":477,"title":{},"body":{"injectables/GithubService.html":{},"injectables/IdentityService.html":{}}}],["constructor(primengconfig",{"_index":288,"title":{},"body":{"components/ContainerComponent.html":{}}}],["constructor(private",{"_index":62,"title":{},"body":{"components/AccountComponent.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["constructor(service",{"_index":645,"title":{},"body":{"injectables/MessageService.html":{}}}],["container",{"_index":285,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["container'},{'name",{"_index":139,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["container.component.html",{"_index":287,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":286,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container",{"_index":366,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.component",{"_index":367,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/container.module",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["container/navbar/navbar.component",{"_index":368,"title":{},"body":{"modules/ContainerModule.html":{}}}],["container/sidenav/sidenav.component",{"_index":369,"title":{},"body":{"modules/ContainerModule.html":{}}}],["containercomponent",{"_index":138,"title":{"components/ContainerComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containermodule",{"_index":233,"title":{"modules/ContainerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules.html":{},"overview.html":{}}}],["containermodule.forroot",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["containerroutingmodule",{"_index":354,"title":{"modules/ContainerRoutingModule.html":{}},"body":{"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["containerservice",{"_index":290,"title":{"injectables/ContainerService.html":{}},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"overview.html":{}}}],["content",{"_index":118,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["content:hover",{"_index":741,"title":{},"body":{"components/SidenavComponent.html":{}}}],["context",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":747,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":546,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["credentials",{"_index":81,"title":{},"body":{"components/AccountComponent.html":{}}}],["current",{"_index":513,"title":{},"body":{"injectables/GithubService.html":{}}}],["dark",{"_index":738,"title":{},"body":{"components/SidenavComponent.html":{}}}],["darken($color",{"_index":734,"title":{},"body":{"components/SidenavComponent.html":{}}}],["declarations",{"_index":181,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"overview.html":{}}}],["decreasing",{"_index":665,"title":{},"body":{"injectables/MessageService.html":{}}}],["default",{"_index":293,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":35,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"injectables/GithubService.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["dependencies",{"_index":180,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":822,"title":{},"body":{"index.html":{}}}],["development",{"_index":817,"title":{},"body":{"index.html":{}}}],["direction",{"_index":115,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["directive",{"_index":132,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["directives",{"_index":153,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":833,"title":{},"body":{"index.html":{}}}],["directory",{"_index":838,"title":{},"body":{"index.html":{}}}],["display",{"_index":113,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["dist",{"_index":837,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["dropdown",{"_index":690,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dynamic",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":850,"title":{},"body":{"index.html":{}}}],["ease",{"_index":322,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["element",{"_index":131,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["email",{"_index":547,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["end",{"_index":849,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":596,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["endpoints.github.baseurl}${req.url.split(providers.github)[1",{"_index":701,"title":{},"body":{"interceptors/NetworkInterceptor.html":{}}}],["endpoints.identity.baseurl",{"_index":602,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["enumerations",{"_index":802,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/message.enum",{"_index":55,"title":{},"body":{"components/AccountComponent.html":{},"injectables/MessageService.html":{}}}],["enums/provider.enum",{"_index":494,"title":{},"body":{"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"interceptors/NetworkInterceptor.html":{}}}],["env/environment",{"_index":597,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["environment",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":79,"title":{},"body":{"components/AccountComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error('invalid",{"_index":642,"title":{},"body":{"injectables/IdentityService.html":{}}}],["error.message",{"_index":82,"title":{},"body":{"components/AccountComponent.html":{}}}],["event",{"_index":308,"title":{},"body":{"components/ContainerComponent.html":{}}}],["event.urlafterredirects.slice(1).replace",{"_index":311,"title":{},"body":{"components/ContainerComponent.html":{}}}],["events_url",{"_index":548,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["execute",{"_index":846,"title":{},"body":{"index.html":{}}}],["expanded",{"_index":325,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/SidenavComponent.html":{}}}],["expandsidenav",{"_index":223,"title":{},"body":{"classes/AppConfig.html":{},"modules/AppModule.html":{},"interfaces/IAppConfig.html":{}}}],["export",{"_index":60,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["exports",{"_index":184,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":96,"title":{},"body":{"components/AccountComponent.html":{}}}],["fa",{"_index":121,"title":{},"body":{"components/AccountComponent.html":{}}}],["failed",{"_index":89,"title":{},"body":{"components/AccountComponent.html":{}}}],["false",{"_index":619,"title":{},"body":{"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["files",{"_index":828,"title":{},"body":{"index.html":{}}}],["filters",{"_index":500,"title":{},"body":{"injectables/GithubService.html":{}}}],["firebase",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["flag",{"_index":840,"title":{},"body":{"index.html":{}}}],["flex",{"_index":114,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["followers",{"_index":419,"title":{},"body":{"components/GitResultComponent.html":{},"interfaces/IGitProfile.html":{}}}],["followers_url",{"_index":549,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["following",{"_index":418,"title":{},"body":{"components/GitResultComponent.html":{},"interfaces/IGitProfile.html":{}}}],["following_url",{"_index":550,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["font",{"_index":106,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"dependencies.html":{}}}],["footer",{"_index":743,"title":{},"body":{"components/SidenavComponent.html":{}}}],["foreach(key",{"_index":174,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{}}}],["form",{"_index":95,"title":{},"body":{"components/AccountComponent.html":{}}}],["formcontrol",{"_index":51,"title":{},"body":{"components/AccountComponent.html":{}}}],["formcontrol(true",{"_index":70,"title":{},"body":{"components/AccountComponent.html":{}}}],["formgroup",{"_index":48,"title":{},"body":{"components/AccountComponent.html":{}}}],["formsmodule",{"_index":462,"title":{},"body":{"modules/GithubModule.html":{}}}],["forroot",{"_index":359,"title":{},"body":{"modules/ContainerModule.html":{}}}],["forroot(args",{"_index":360,"title":{},"body":{"modules/ContainerModule.html":{}}}],["fsevents",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GithubRoutingModule.html":{}}}],["further",{"_index":852,"title":{},"body":{"index.html":{}}}],["g",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["generate",{"_index":831,"title":{},"body":{"index.html":{}}}],["generated",{"_index":813,"title":{},"body":{"index.html":{}}}],["get(body",{"_index":705,"title":{},"body":{"injectables/NetworkService.html":{}}}],["get(body.path",{"_index":711,"title":{},"body":{"injectables/NetworkService.html":{}}}],["getprofile",{"_index":473,"title":{},"body":{"injectables/GithubService.html":{}}}],["getprofile(user",{"_index":482,"title":{},"body":{"injectables/GithubService.html":{}}}],["getting",{"_index":809,"title":{"index.html":{}},"body":{}}],["gists_url",{"_index":551,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["git",{"_index":143,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["github",{"_index":433,"title":{},"body":{"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["github'},{'name",{"_index":141,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["github.component.html",{"_index":442,"title":{},"body":{"components/GithubComponent.html":{}}}],["github.component.scss",{"_index":441,"title":{},"body":{"components/GithubComponent.html":{}}}],["github/git",{"_index":463,"title":{},"body":{"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{}}}],["github/github",{"_index":467,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/github.component",{"_index":468,"title":{},"body":{"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{}}}],["githubcomponent",{"_index":140,"title":{"components/GithubComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubmodule",{"_index":445,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules.html":{},"overview.html":{}}}],["githubroutingmodule",{"_index":450,"title":{"modules/GithubRoutingModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":355,"title":{"injectables/GithubService.html":{}},"body":{"modules/ContainerModule.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"coverage.html":{},"overview.html":{}}}],["gitprofilecomponent",{"_index":142,"title":{"components/GitProfileComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gitresultcomponent",{"_index":145,"title":{"components/GitResultComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gitsearchcomponent",{"_index":147,"title":{"components/GitSearchComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":855,"title":{},"body":{"index.html":{}}}],["graph",{"_index":864,"title":{},"body":{"modules.html":{}}}],["gravatar_id",{"_index":552,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["guard",{"_index":266,"title":{"guards/AuthGuard.html":{},"guards/SessionGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{},"guards/SessionGuard.html":{},"overview.html":{}}}],["header",{"_index":103,"title":{},"body":{"components/AccountComponent.html":{},"components/SidenavComponent.html":{}}}],["height",{"_index":313,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["help",{"_index":853,"title":{},"body":{"index.html":{}}}],["helpers/app",{"_index":370,"title":{},"body":{"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/NetworkService.html":{}}}],["helpers/http",{"_index":708,"title":{},"body":{"injectables/NetworkService.html":{}}}],["helpers/search",{"_index":577,"title":{},"body":{"interfaces/IHttpRequest.html":{}}}],["here",{"_index":415,"title":{},"body":{"components/GitResultComponent.html":{}}}],["hidden",{"_index":348,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["hide",{"_index":744,"title":{},"body":{"components/SidenavComponent.html":{}}}],["html",{"_index":130,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["html_url",{"_index":553,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["http",{"_index":478,"title":{},"body":{"injectables/GithubService.html":{},"injectables/NetworkService.html":{}}}],["http://localhost:4200",{"_index":824,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":363,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpclient",{"_index":479,"title":{},"body":{"injectables/GithubService.html":{},"injectables/NetworkService.html":{}}}],["httpclientmodule",{"_index":364,"title":{},"body":{"modules/ContainerModule.html":{}}}],["httpevent",{"_index":593,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["httphandler",{"_index":589,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["httpinterceptor",{"_index":594,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["httprequest",{"_index":588,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["httpresponse",{"_index":595,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["https://api.github.com",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hub",{"_index":729,"title":{},"body":{"components/SidenavComponent.html":{}}}],["iaccountmodel",{"_index":56,"title":{"interfaces/IAccountModel.html":{}},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"components/ContainerComponent.html":{},"interfaces/IAccountModel.html":{},"injectables/IdentityService.html":{},"coverage.html":{}}}],["iappconfig",{"_index":224,"title":{"interfaces/IAppConfig.html":{}},"body":{"classes/AppConfig.html":{},"interfaces/IAppConfig.html":{},"coverage.html":{}}}],["id",{"_index":417,"title":{},"body":{"components/GitResultComponent.html":{},"interfaces/IGitProfile.html":{}}}],["identifier",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"guards/SessionGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["identityinterceptor",{"_index":372,"title":{"interceptors/IdentityInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/IdentityInterceptor.html":{},"coverage.html":{}}}],["identityservice",{"_index":32,"title":{"injectables/IdentityService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"injectables/IdentityService.html":{},"components/NavbarComponent.html":{},"guards/SessionGuard.html":{},"coverage.html":{},"overview.html":{}}}],["identtiy",{"_index":42,"title":{},"body":{"components/AccountComponent.html":{}}}],["igitprofile",{"_index":409,"title":{"interfaces/IGitProfile.html":{}},"body":{"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"coverage.html":{}}}],["igitrepository",{"_index":495,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/IGitProfile.html":{},"coverage.html":{}}}],["igitsearch",{"_index":497,"title":{"interfaces/IGitSearch.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/IGitSearch.html":{},"coverage.html":{}}}],["ihttprequest",{"_index":573,"title":{"interfaces/IHttpRequest.html":{}},"body":{"interfaces/IHttpRequest.html":{},"injectables/NetworkService.html":{},"coverage.html":{}}}],["image",{"_index":416,"title":{},"body":{"components/GitResultComponent.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AccountComponent.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"interceptors/IdentityInterceptor.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["import",{"_index":49,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["import('./account/account.module').then(m",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./github/github.module').then(m",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":195,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{}}}],["incomplete_results",{"_index":571,"title":{},"body":{"interfaces/IGitSearch.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"classes/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":580,"title":{},"body":{"interfaces/ISearchParams.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["initform",{"_index":27,"title":{},"body":{"components/AccountComponent.html":{}}}],["initidentity",{"_index":610,"title":{},"body":{"injectables/IdentityService.html":{}}}],["injectable",{"_index":278,"title":{"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":383,"title":{},"body":{"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"injectables/NetworkService.html":{},"overview.html":{}}}],["input",{"_index":411,"title":{},"body":{"components/GitResultComponent.html":{}}}],["inputs",{"_index":406,"title":{},"body":{"components/GitResultComponent.html":{}}}],["inputtextmodule",{"_index":197,"title":{},"body":{"modules/AccountModule.html":{},"modules/GithubModule.html":{}}}],["instanceof",{"_index":310,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/IdentityInterceptor.html":{}}}],["intercept",{"_index":586,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["intercept(req",{"_index":587,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["interceptor",{"_index":583,"title":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":584,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["interceptors/account.interceptor",{"_index":373,"title":{},"body":{"modules/ContainerModule.html":{}}}],["interceptors/network.interceptor",{"_index":375,"title":{},"body":{"modules/ContainerModule.html":{}}}],["interface",{"_index":172,"title":{"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{}},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"coverage.html":{}}}],["interfaces",{"_index":541,"title":{},"body":{"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"overview.html":{}}}],["invalid",{"_index":85,"title":{},"body":{"components/AccountComponent.html":{}}}],["isearchparams",{"_index":576,"title":{"interfaces/ISearchParams.html":{}},"body":{"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"coverage.html":{}}}],["item",{"_index":695,"title":{},"body":{"components/NavbarComponent.html":{}}}],["item:hover",{"_index":697,"title":{},"body":{"components/NavbarComponent.html":{}}}],["items",{"_index":111,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"interfaces/IGitSearch.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["jquery",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(result",{"_index":624,"title":{},"body":{"injectables/IdentityService.html":{}}}],["justify",{"_index":117,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["karma",{"_index":848,"title":{},"body":{"index.html":{}}}],["key",{"_index":581,"title":{},"body":{"interfaces/ISearchParams.html":{}}}],["left",{"_index":732,"title":{},"body":{"components/SidenavComponent.html":{}}}],["legend",{"_index":129,"title":{},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"overview.html":{}}}],["lighten($color",{"_index":336,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["links",{"_index":688,"title":{},"body":{"components/NavbarComponent.html":{}}}],["literal",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem('identity",{"_index":630,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.removeitem('identity",{"_index":625,"title":{},"body":{"injectables/IdentityService.html":{}}}],["localstorage.setitem('identity",{"_index":623,"title":{},"body":{"injectables/IdentityService.html":{}}}],["location",{"_index":554,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["login",{"_index":91,"title":{},"body":{"components/AccountComponent.html":{},"injectables/GithubService.html":{},"interfaces/IGitProfile.html":{}}}],["loginform",{"_index":24,"title":{},"body":{"components/AccountComponent.html":{}}}],["logout",{"_index":686,"title":{},"body":{"components/NavbarComponent.html":{}}}],["m.accountmodule",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.githubmodule",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":343,"title":{},"body":{"components/ContainerComponent.html":{}}}],["map",{"_index":492,"title":{},"body":{"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{}}}],["map(result",{"_index":605,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["margin",{"_index":98,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["matching",{"_index":156,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":316,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["menu.show",{"_index":691,"title":{},"body":{"components/NavbarComponent.html":{}}}],["message",{"_index":33,"title":{},"body":{"components/AccountComponent.html":{},"injectables/MessageService.html":{}}}],["messageservice",{"_index":34,"title":{"injectables/MessageService.html":{}},"body":{"components/AccountComponent.html":{},"modules/AccountModule.html":{},"injectables/MessageService.html":{},"coverage.html":{},"overview.html":{}}}],["messagetype",{"_index":54,"title":{},"body":{"components/AccountComponent.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{}}}],["messagetype.error",{"_index":90,"title":{},"body":{"components/AccountComponent.html":{},"injectables/MessageService.html":{}}}],["messagetype.info",{"_index":651,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagetype.success",{"_index":77,"title":{},"body":{"components/AccountComponent.html":{},"injectables/MessageService.html":{}}}],["messagetype.warning",{"_index":676,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AccountComponent.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["min",{"_index":324,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["miscellaneous",{"_index":801,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["models/account",{"_index":57,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"injectables/IdentityService.html":{}}}],["models/git",{"_index":412,"title":{},"body":{"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{}}}],["module",{"_index":177,"title":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"overview.html":{}}}],["modules",{"_index":179,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":362,"title":{},"body":{"modules/ContainerModule.html":{}}}],["more",{"_index":854,"title":{},"body":{"index.html":{}}}],["multi",{"_index":381,"title":{},"body":{"modules/ContainerModule.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IGitProfile.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["navbar",{"_index":327,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":150,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["navbar.component.html",{"_index":680,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":679,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":149,"title":{"components/NavbarComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":823,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":297,"title":{},"body":{"components/ContainerComponent.html":{}}}],["navigationstart",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{}}}],["network",{"_index":481,"title":{},"body":{"injectables/GithubService.html":{},"injectables/IdentityService.html":{}}}],["networkinterceptor",{"_index":374,"title":{"interceptors/NetworkInterceptor.html":{}},"body":{"modules/ContainerModule.html":{},"interceptors/NetworkInterceptor.html":{},"coverage.html":{}}}],["networkservice",{"_index":356,"title":{"injectables/NetworkService.html":{}},"body":{"modules/ContainerModule.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{},"coverage.html":{},"overview.html":{}}}],["new",{"_index":65,"title":{},"body":{"components/AccountComponent.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":306,"title":{},"body":{"components/ContainerComponent.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"interceptors/NetworkInterceptor.html":{}}}],["next.handle(req",{"_index":603,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["ng",{"_index":820,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":204,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["ngx",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["node_id",{"_index":555,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["none",{"_index":694,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["nothing",{"_index":413,"title":{},"body":{"components/GitResultComponent.html":{}}}],["null",{"_index":438,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["number",{"_index":569,"title":{},"body":{"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{}}}],["object",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(args",{"_index":173,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{}}}],["object.keys(result).foreach(key",{"_index":525,"title":{},"body":{"injectables/GithubService.html":{}}}],["observable",{"_index":592,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["onlogin",{"_index":29,"title":{},"body":{"components/AccountComponent.html":{}}}],["onsearch",{"_index":430,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["ontogglesidenav",{"_index":722,"title":{},"body":{"components/SidenavComponent.html":{}}}],["opacity",{"_index":731,"title":{},"body":{"components/SidenavComponent.html":{}}}],["optional",{"_index":41,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"classes/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IGitProfile.html":{},"interfaces/IHttpRequest.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["organizations_url",{"_index":556,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["original",{"_index":598,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["original.url.split(`${providers.identity}/`)[1",{"_index":600,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["original.url.startswith(providers.identity",{"_index":606,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["out",{"_index":193,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":345,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["overlay",{"_index":742,"title":{},"body":{"components/SidenavComponent.html":{}}}],["overview",{"_index":857,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["pacifico",{"_index":730,"title":{},"body":{"components/SidenavComponent.html":{}}}],["package",{"_index":770,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":104,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["page",{"_index":860,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"classes/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["params",{"_index":508,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/IHttpRequest.html":{},"injectables/NetworkService.html":{}}}],["params.ts",{"_index":579,"title":{},"body":{"interfaces/ISearchParams.html":{},"coverage.html":{}}}],["params.ts:1",{"_index":582,"title":{},"body":{"interfaces/ISearchParams.html":{}}}],["pass",{"_index":68,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"interfaces/IAccountModel.html":{}}}],["password",{"_index":87,"title":{},"body":{"components/AccountComponent.html":{},"injectables/IdentityService.html":{}}}],["path",{"_index":212,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IHttpRequest.html":{},"injectables/IdentityService.html":{}}}],["pathmatch",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GithubRoutingModule.html":{}}}],["per_page",{"_index":502,"title":{},"body":{"injectables/GithubService.html":{}}}],["pipe",{"_index":604,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["pipe(map(result",{"_index":534,"title":{},"body":{"injectables/GithubService.html":{}}}],["pipe(tap((result",{"_index":635,"title":{},"body":{"injectables/IdentityService.html":{}}}],["popper.js",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":692,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["primary",{"_index":337,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["primeicons",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":196,"title":{},"body":{"modules/AccountModule.html":{},"components/ContainerComponent.html":{}}}],["primeng/badge",{"_index":453,"title":{},"body":{"modules/GithubModule.html":{}}}],["primeng/button",{"_index":455,"title":{},"body":{"modules/GithubModule.html":{}}}],["primeng/inputtext",{"_index":198,"title":{},"body":{"modules/AccountModule.html":{},"modules/GithubModule.html":{}}}],["primeng/progressbar",{"_index":457,"title":{},"body":{"modules/GithubModule.html":{}}}],["primeng/rating",{"_index":459,"title":{},"body":{"modules/GithubModule.html":{}}}],["primeng/table",{"_index":461,"title":{},"body":{"modules/GithubModule.html":{}}}],["primengconfig",{"_index":289,"title":{},"body":{"components/ContainerComponent.html":{}}}],["private",{"_index":26,"title":{},"body":{"components/AccountComponent.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["prod",{"_index":839,"title":{},"body":{"index.html":{}}}],["production",{"_index":841,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":396,"title":{},"body":{"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IGitSearch.html":{}}}],["profile'},{'name",{"_index":144,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["profile.component",{"_index":464,"title":{},"body":{"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{}}}],["profile.component.html",{"_index":398,"title":{},"body":{"components/GitProfileComponent.html":{}}}],["profile.component.scss",{"_index":397,"title":{},"body":{"components/GitProfileComponent.html":{}}}],["profile.component.ts",{"_index":395,"title":{},"body":{"components/GitProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:10",{"_index":400,"title":{},"body":{"components/GitProfileComponent.html":{}}}],["profile.component.ts:8",{"_index":399,"title":{},"body":{"components/GitProfileComponent.html":{}}}],["profile.followers",{"_index":424,"title":{},"body":{"components/GitResultComponent.html":{}}}],["profile.following",{"_index":423,"title":{},"body":{"components/GitResultComponent.html":{}}}],["profile.id",{"_index":420,"title":{},"body":{"components/GitResultComponent.html":{}}}],["profile.name",{"_index":421,"title":{},"body":{"components/GitResultComponent.html":{}}}],["profile.repositories",{"_index":529,"title":{},"body":{"injectables/GithubService.html":{}}}],["profile.ts",{"_index":543,"title":{},"body":{"interfaces/IGitProfile.html":{},"coverage.html":{}}}],["profile/git",{"_index":394,"title":{},"body":{"components/GitProfileComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"coverage.html":{}}}],["profile[key",{"_index":526,"title":{},"body":{"injectables/GithubService.html":{}}}],["profiles",{"_index":407,"title":{},"body":{"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{}}}],["progressbarmodule",{"_index":456,"title":{},"body":{"modules/GithubModule.html":{}}}],["project",{"_index":812,"title":{},"body":{"index.html":{}}}],["promise",{"_index":484,"title":{},"body":{"injectables/GithubService.html":{},"injectables/IdentityService.html":{}}}],["promise((resolve",{"_index":498,"title":{},"body":{"injectables/GithubService.html":{}}}],["promise.resolve().then",{"_index":628,"title":{},"body":{"injectables/IdentityService.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"classes/AppConfig.html":{},"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"injectables/IdentityService.html":{},"components/SidenavComponent.html":{}}}],["protractor",{"_index":851,"title":{},"body":{"index.html":{}}}],["provide",{"_index":378,"title":{},"body":{"modules/ContainerModule.html":{}}}],["providedin",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MessageService.html":{},"guards/SessionGuard.html":{}}}],["provider",{"_index":505,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/IHttpRequest.html":{},"injectables/IdentityService.html":{}}}],["providers",{"_index":183,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"interceptors/NetworkInterceptor.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["providers.github",{"_index":506,"title":{},"body":{"injectables/GithubService.html":{}}}],["providers.identity",{"_index":633,"title":{},"body":{"injectables/IdentityService.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"classes/AppConfig.html":{},"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"injectables/NetworkService.html":{},"components/SidenavComponent.html":{}}}],["public_gists",{"_index":557,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["public_repos",{"_index":558,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["q",{"_index":501,"title":{},"body":{"injectables/GithubService.html":{}}}],["radius",{"_index":127,"title":{},"body":{"components/AccountComponent.html":{},"components/GitResultComponent.html":{},"components/SidenavComponent.html":{}}}],["ratingmodule",{"_index":458,"title":{},"body":{"modules/GithubModule.html":{}}}],["reactiveformsmodule",{"_index":205,"title":{},"body":{"modules/AccountModule.html":{},"modules/ContainerModule.html":{}}}],["readonly",{"_index":471,"title":{},"body":{"injectables/GithubService.html":{}}}],["received_events_url",{"_index":559,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["redirectto",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GithubRoutingModule.html":{}}}],["reference",{"_index":859,"title":{},"body":{"index.html":{}}}],["reject",{"_index":499,"title":{},"body":{"injectables/GithubService.html":{}}}],["relative",{"_index":696,"title":{},"body":{"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["reload",{"_index":826,"title":{},"body":{"index.html":{}}}],["rememberme",{"_index":69,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"interfaces/IAccountModel.html":{}}}],["repos_url",{"_index":560,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["repositories",{"_index":561,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["repository",{"_index":496,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/IGitProfile.html":{}}}],["repository.ts",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["req",{"_index":591,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["req.clone",{"_index":599,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["req.url.includes(providers.github",{"_index":700,"title":{},"body":{"interceptors/NetworkInterceptor.html":{}}}],["req.url.startswith(providers.identity",{"_index":601,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["request",{"_index":709,"title":{},"body":{"injectables/NetworkService.html":{}}}],["request.ts",{"_index":575,"title":{},"body":{"interfaces/IHttpRequest.html":{},"coverage.html":{}}}],["require",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":192,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"overview.html":{}}}],["resolve(profile",{"_index":530,"title":{},"body":{"injectables/GithubService.html":{}}}],["resolve(this.profiles.slice",{"_index":522,"title":{},"body":{"injectables/GithubService.html":{}}}],["response.items.foreach((profile",{"_index":511,"title":{},"body":{"injectables/GithubService.html":{}}}],["response.items[response.items.length",{"_index":520,"title":{},"body":{"injectables/GithubService.html":{}}}],["result",{"_index":155,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result'},{'name",{"_index":146,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["result.body[username",{"_index":607,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["result.component",{"_index":465,"title":{},"body":{"modules/GithubModule.html":{}}}],["result.component.html",{"_index":405,"title":{},"body":{"components/GitResultComponent.html":{}}}],["result.component.scss",{"_index":404,"title":{},"body":{"components/GitResultComponent.html":{}}}],["result.component.ts",{"_index":403,"title":{},"body":{"components/GitResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:10",{"_index":408,"title":{},"body":{"components/GitResultComponent.html":{}}}],["result.component.ts:12",{"_index":410,"title":{},"body":{"components/GitResultComponent.html":{}}}],["result.filter(x",{"_index":535,"title":{},"body":{"injectables/GithubService.html":{}}}],["result.id",{"_index":516,"title":{},"body":{"injectables/GithubService.html":{}}}],["result.name",{"_index":76,"title":{},"body":{"components/AccountComponent.html":{},"injectables/IdentityService.html":{}}}],["result.state",{"_index":622,"title":{},"body":{"injectables/IdentityService.html":{}}}],["result.user",{"_index":640,"title":{},"body":{"injectables/IdentityService.html":{}}}],["result/git",{"_index":402,"title":{},"body":{"components/GitResultComponent.html":{},"modules/GithubModule.html":{},"coverage.html":{}}}],["result?.pass",{"_index":637,"title":{},"body":{"injectables/IdentityService.html":{}}}],["result?.user",{"_index":636,"title":{},"body":{"injectables/IdentityService.html":{}}}],["result[key",{"_index":527,"title":{},"body":{"injectables/GithubService.html":{}}}],["results",{"_index":157,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"modules/ContainerModule.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AccountComponent.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["right",{"_index":122,"title":{},"body":{"components/AccountComponent.html":{},"injectables/MessageService.html":{},"components/SidenavComponent.html":{}}}],["root",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/MessageService.html":{},"guards/SessionGuard.html":{}}}],["root'},{'name",{"_index":137,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["route",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"guards/SessionGuard.html":{}}}],["router",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"injectables/IdentityService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["routermodule",{"_index":209,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":214,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{},"guards/SessionGuard.html":{}}}],["routes",{"_index":210,"title":{"routes.html":{}},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":200,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{}}}],["routing.module.ts",{"_index":208,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ContainerRoutingModule.html":{},"modules/GithubRoutingModule.html":{}}}],["run",{"_index":819,"title":{},"body":{"index.html":{}}}],["running",{"_index":842,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":390,"title":{},"body":{"injectables/ContainerService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":493,"title":{},"body":{"injectables/GithubService.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{}}}],["scaffolding",{"_index":830,"title":{},"body":{"index.html":{}}}],["score",{"_index":562,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["search",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"components/SidenavComponent.html":{}}}],["search'},{'name",{"_index":148,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["search.component",{"_index":466,"title":{},"body":{"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{}}}],["search.component.html",{"_index":429,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["search.component.scss",{"_index":428,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["search.component.ts",{"_index":427,"title":{},"body":{"components/GitSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:11",{"_index":436,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["search.component.ts:12",{"_index":432,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["search.component.ts:14",{"_index":434,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["search.component.ts:15",{"_index":435,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["search.ts",{"_index":570,"title":{},"body":{"interfaces/IGitSearch.html":{},"coverage.html":{}}}],["search/git",{"_index":426,"title":{},"body":{"components/GitSearchComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"coverage.html":{}}}],["search/users",{"_index":507,"title":{},"body":{"injectables/GithubService.html":{}}}],["searchusers",{"_index":474,"title":{},"body":{"injectables/GithubService.html":{}}}],["searchusers(login",{"_index":485,"title":{},"body":{"injectables/GithubService.html":{}}}],["see",{"_index":414,"title":{},"body":{"components/GitResultComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["serve",{"_index":821,"title":{},"body":{"index.html":{}}}],["server",{"_index":818,"title":{},"body":{"index.html":{}}}],["service",{"_index":648,"title":{},"body":{"injectables/MessageService.html":{}}}],["services/account.guard",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["services/account.service",{"_index":58,"title":{},"body":{"components/AccountComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"guards/SessionGuard.html":{}}}],["services/container.service",{"_index":298,"title":{},"body":{"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/SidenavComponent.html":{}}}],["services/github.service",{"_index":376,"title":{},"body":{"modules/ContainerModule.html":{},"components/GitSearchComponent.html":{}}}],["services/message.service",{"_index":59,"title":{},"body":{"components/AccountComponent.html":{}}}],["services/network.service",{"_index":377,"title":{},"body":{"modules/ContainerModule.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{}}}],["services/session.guard",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["sessionguard",{"_index":248,"title":{"guards/SessionGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/SessionGuard.html":{},"coverage.html":{}}}],["shadow",{"_index":97,"title":{},"body":{"components/AccountComponent.html":{}}}],["show",{"_index":644,"title":{},"body":{"injectables/MessageService.html":{}}}],["show(title",{"_index":649,"title":{},"body":{"injectables/MessageService.html":{}}}],["sidenav",{"_index":152,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav.component.html",{"_index":721,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":720,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavchanged",{"_index":385,"title":{},"body":{"injectables/ContainerService.html":{}}}],["sidenavclass",{"_index":386,"title":{},"body":{"injectables/ContainerService.html":{}}}],["sidenavcomponent",{"_index":151,"title":{"components/SidenavComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["site_admin",{"_index":563,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["size",{"_index":107,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["solid",{"_index":736,"title":{},"body":{"components/SidenavComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"classes/AppConfig.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"modules/ContainerRoutingModule.html":{},"injectables/ContainerService.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"modules/GithubModule.html":{},"modules/GithubRoutingModule.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["space",{"_index":318,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["span",{"_index":739,"title":{},"body":{"components/SidenavComponent.html":{}}}],["spec\\.ts",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../account.module.ts",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../container.module.ts",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.module.ts",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../message.enum.ts",{"_index":803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../provider.enum.ts",{"_index":804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account/account",{"_index":207,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["src/app/account/account.component.ts",{"_index":10,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/account/account.component.ts:14",{"_index":36,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:16",{"_index":46,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:17",{"_index":43,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:24",{"_index":47,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.module.ts",{"_index":194,"title":{},"body":{"modules/AccountModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/container/container",{"_index":382,"title":{},"body":{"modules/ContainerRoutingModule.html":{}}}],["src/app/container/container.component.ts",{"_index":284,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{}}}],["src/app/container/container.component.ts:14",{"_index":295,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:15",{"_index":296,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:16",{"_index":291,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.component.ts:33",{"_index":292,"title":{},"body":{"components/ContainerComponent.html":{}}}],["src/app/container/container.module.ts",{"_index":357,"title":{},"body":{"modules/ContainerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/container/container.module.ts:38",{"_index":361,"title":{},"body":{"modules/ContainerModule.html":{}}}],["src/app/container/navbar/navbar.component.ts",{"_index":678,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/container/navbar/navbar.component.ts:11",{"_index":682,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/container/navbar/navbar.component.ts:12",{"_index":683,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/container/navbar/navbar.component.ts:9",{"_index":681,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts",{"_index":719,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:11",{"_index":724,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:15",{"_index":725,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/container/sidenav/sidenav.component.ts:16",{"_index":726,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/github/git",{"_index":393,"title":{},"body":{"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"coverage.html":{}}}],["src/app/github/github",{"_index":469,"title":{},"body":{"modules/GithubRoutingModule.html":{}}}],["src/app/github/github.component.ts",{"_index":440,"title":{},"body":{"components/GithubComponent.html":{},"coverage.html":{}}}],["src/app/github/github.component.ts:10",{"_index":444,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/github/github.component.ts:8",{"_index":443,"title":{},"body":{"components/GithubComponent.html":{}}}],["src/app/github/github.module.ts",{"_index":451,"title":{},"body":{"modules/GithubModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/enums/message.enum.ts",{"_index":805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/enums/provider.enum.ts",{"_index":808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/helpers/app",{"_index":221,"title":{},"body":{"classes/AppConfig.html":{},"interfaces/IAppConfig.html":{},"coverage.html":{}}}],["src/shared/helpers/http",{"_index":574,"title":{},"body":{"interfaces/IHttpRequest.html":{},"coverage.html":{}}}],["src/shared/helpers/search",{"_index":578,"title":{},"body":{"interfaces/ISearchParams.html":{},"coverage.html":{}}}],["src/shared/interceptors/account.interceptor.ts",{"_index":585,"title":{},"body":{"interceptors/IdentityInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/account.interceptor.ts:10",{"_index":590,"title":{},"body":{"interceptors/IdentityInterceptor.html":{}}}],["src/shared/interceptors/network.interceptor.ts",{"_index":698,"title":{},"body":{"interceptors/NetworkInterceptor.html":{},"coverage.html":{}}}],["src/shared/interceptors/network.interceptor.ts:9",{"_index":699,"title":{},"body":{"interceptors/NetworkInterceptor.html":{}}}],["src/shared/models/account.ts",{"_index":160,"title":{},"body":{"classes/AccountModel.html":{},"interfaces/IAccountModel.html":{},"coverage.html":{}}}],["src/shared/models/account.ts:10",{"_index":168,"title":{},"body":{"classes/AccountModel.html":{}}}],["src/shared/models/account.ts:11",{"_index":171,"title":{},"body":{"classes/AccountModel.html":{}}}],["src/shared/models/account.ts:12",{"_index":170,"title":{},"body":{"classes/AccountModel.html":{}}}],["src/shared/models/account.ts:13",{"_index":163,"title":{},"body":{"classes/AccountModel.html":{}}}],["src/shared/models/account.ts:9",{"_index":167,"title":{},"body":{"classes/AccountModel.html":{}}}],["src/shared/models/git",{"_index":542,"title":{},"body":{"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"coverage.html":{}}}],["src/shared/services/account.guard.ts",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/shared/services/account.guard.ts:6",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/services/account.guard.ts:9",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/shared/services/account.service.ts",{"_index":608,"title":{},"body":{"injectables/IdentityService.html":{},"coverage.html":{}}}],["src/shared/services/account.service.ts:11",{"_index":618,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/shared/services/account.service.ts:12",{"_index":613,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/shared/services/account.service.ts:27",{"_index":614,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/shared/services/account.service.ts:35",{"_index":616,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/shared/services/account.service.ts:46",{"_index":617,"title":{},"body":{"injectables/IdentityService.html":{}}}],["src/shared/services/container.service.ts",{"_index":384,"title":{},"body":{"injectables/ContainerService.html":{},"coverage.html":{}}}],["src/shared/services/container.service.ts:7",{"_index":389,"title":{},"body":{"injectables/ContainerService.html":{}}}],["src/shared/services/container.service.ts:8",{"_index":387,"title":{},"body":{"injectables/ContainerService.html":{}}}],["src/shared/services/github.service.ts",{"_index":470,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/shared/services/github.service.ts:13",{"_index":480,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/shared/services/github.service.ts:16",{"_index":486,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/shared/services/github.service.ts:35",{"_index":488,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/shared/services/github.service.ts:48",{"_index":490,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/shared/services/github.service.ts:53",{"_index":483,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/shared/services/message.service.ts",{"_index":643,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/shared/services/message.service.ts:23",{"_index":650,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/shared/services/message.service.ts:6",{"_index":647,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/shared/services/network.service.ts",{"_index":702,"title":{},"body":{"injectables/NetworkService.html":{},"coverage.html":{}}}],["src/shared/services/network.service.ts:10",{"_index":706,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/shared/services/network.service.ts:8",{"_index":704,"title":{},"body":{"injectables/NetworkService.html":{}}}],["src/shared/services/session.guard.ts",{"_index":715,"title":{},"body":{"guards/SessionGuard.html":{},"coverage.html":{}}}],["src/shared/services/session.guard.ts:6",{"_index":716,"title":{},"body":{"guards/SessionGuard.html":{}}}],["src/shared/services/session.guard.ts:9",{"_index":717,"title":{},"body":{"guards/SessionGuard.html":{}}}],["src/test.ts",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["starred_url",{"_index":564,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["start",{"_index":687,"title":{},"body":{"components/NavbarComponent.html":{}}}],["started",{"_index":810,"title":{"index.html":{}},"body":{}}],["state",{"_index":161,"title":{},"body":{"classes/AccountModel.html":{},"guards/AuthGuard.html":{},"interfaces/IAccountModel.html":{},"injectables/IdentityService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{}}}],["statements",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":358,"title":{},"body":{"modules/ContainerModule.html":{}}}],["stored",{"_index":836,"title":{},"body":{"index.html":{}}}],["string",{"_index":166,"title":{},"body":{"classes/AccountModel.html":{},"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IGitProfile.html":{},"interfaces/IHttpRequest.html":{},"interfaces/ISearchParams.html":{},"injectables/MessageService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["subject",{"_index":388,"title":{},"body":{"injectables/ContainerService.html":{},"injectables/IdentityService.html":{}}}],["subscribe",{"_index":305,"title":{},"body":{"components/ContainerComponent.html":{}}}],["subscriptions_url",{"_index":565,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["success",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["support",{"_index":861,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":862,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":670,"title":{},"body":{"injectables/MessageService.html":{}}}],["t",{"_index":707,"title":{},"body":{"injectables/NetworkService.html":{}}}],["table",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["tablemodule",{"_index":460,"title":{},"body":{"modules/GithubModule.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":620,"title":{},"body":{"injectables/IdentityService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["test",{"_index":845,"title":{},"body":{"index.html":{}}}],["tests",{"_index":844,"title":{},"body":{"index.html":{}}}],["text",{"_index":120,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["then((response",{"_index":510,"title":{},"body":{"injectables/GithubService.html":{}}}],["then((result",{"_index":73,"title":{},"body":{"components/AccountComponent.html":{},"injectables/GithubService.html":{}}}],["then(result",{"_index":524,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.$authchanged.next",{"_index":639,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.$authchanged.next(json.parse(localstorage.getitem('identity",{"_index":631,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.$authchanged.subscribe",{"_index":621,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.account",{"_index":300,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/IdentityService.html":{}}}],["this.account.state",{"_index":629,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.container.$sidenavchanged",{"_index":304,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.container.$sidenavchanged.next(this.state",{"_index":728,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.container.sidenavclass",{"_index":303,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["this.github.searchusers(this.search).then(result",{"_index":439,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["this.http",{"_index":710,"title":{},"body":{"injectables/NetworkService.html":{}}}],["this.http.get(profile.repos_url",{"_index":532,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(profile.url).topromise",{"_index":523,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.identity.$authchanged",{"_index":312,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.identity.account",{"_index":301,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.identity.account.state",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"guards/SessionGuard.html":{}}}],["this.identity.userlogout",{"_index":684,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.identtiy",{"_index":71,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.initform",{"_index":63,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.initidentity",{"_index":627,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.loginform",{"_index":64,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.loginform.controls.pass.seterrors",{"_index":86,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.loginform.controls.user.seterrors",{"_index":83,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.loginform.errors?.credentials",{"_index":92,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.loginform.seterrors",{"_index":80,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.message.show('logged",{"_index":74,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.message.show('login",{"_index":88,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.network",{"_index":632,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.network.get",{"_index":504,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.primengconfig.ripple",{"_index":299,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.profiles",{"_index":437,"title":{},"body":{"components/GitSearchComponent.html":{}}}],["this.profiles.find(x",{"_index":514,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.profiles.push(result",{"_index":519,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.profiles.slice().find(x",{"_index":539,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.profiles.some(x",{"_index":537,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.profiles.splice(this.profiles.indexof(current",{"_index":517,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.route",{"_index":309,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.router.events",{"_index":307,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.router.navigate(['auth",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['search",{"_index":718,"title":{},"body":{"guards/SessionGuard.html":{}}}],["this.router.navigate([result.state",{"_index":626,"title":{},"body":{"injectables/IdentityService.html":{}}}],["this.searchusers(user))[0",{"_index":540,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.service.error(message",{"_index":672,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.info(message",{"_index":674,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.success(message",{"_index":675,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.autodismiss",{"_index":652,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.closebutton",{"_index":653,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.easing",{"_index":654,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.extendedtimeout",{"_index":655,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.maxopened",{"_index":657,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.newestontop",{"_index":659,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.positionclass",{"_index":660,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.preventduplicates",{"_index":663,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressanimation",{"_index":664,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.progressbar",{"_index":666,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.taptodismiss",{"_index":667,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.toastrconfig.timeout",{"_index":668,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.service.warning(message",{"_index":677,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.sidenav",{"_index":302,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.sidenavclass",{"_index":391,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.state",{"_index":727,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.updateprofile(profile",{"_index":512,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.updaterepositories(result",{"_index":528,"title":{},"body":{"injectables/GithubService.html":{}}}],["this[key",{"_index":175,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{}}}],["throw",{"_index":641,"title":{},"body":{"injectables/IdentityService.html":{}}}],["title",{"_index":330,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/MessageService.html":{}}}],["titlecase",{"_index":422,"title":{},"body":{"components/GitResultComponent.html":{}}}],["toast",{"_index":661,"title":{},"body":{"injectables/MessageService.html":{}}}],["toastr",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageService.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":646,"title":{},"body":{"injectables/MessageService.html":{}}}],["tools",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["topromise",{"_index":509,"title":{},"body":{"injectables/GithubService.html":{},"injectables/IdentityService.html":{}}}],["total_count",{"_index":572,"title":{},"body":{"interfaces/IGitSearch.html":{}}}],["transform",{"_index":340,"title":{},"body":{"components/ContainerComponent.html":{}}}],["transition",{"_index":321,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["true",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["twitter_username",{"_index":566,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"classes/AppConfig.html":{},"guards/AuthGuard.html":{},"components/ContainerComponent.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"interfaces/IAppConfig.html":{},"interfaces/IGitProfile.html":{},"interfaces/IGitSearch.html":{},"interfaces/IHttpRequest.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"interceptors/NetworkInterceptor.html":{},"injectables/NetworkService.html":{},"guards/SessionGuard.html":{},"components/SidenavComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":843,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":567,"title":{},"body":{"interfaces/IGitProfile.html":{}}}],["updateprofile",{"_index":475,"title":{},"body":{"injectables/GithubService.html":{}}}],["updateprofile(profile",{"_index":487,"title":{},"body":{"injectables/GithubService.html":{}}}],["updaterepositories",{"_index":476,"title":{},"body":{"injectables/GithubService.html":{}}}],["updaterepositories(profile",{"_index":489,"title":{},"body":{"injectables/GithubService.html":{}}}],["url",{"_index":568,"title":{},"body":{"interfaces/IGitProfile.html":{},"interceptors/IdentityInterceptor.html":{},"interceptors/NetworkInterceptor.html":{}}}],["use",{"_index":832,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":380,"title":{},"body":{"modules/ContainerModule.html":{}}}],["user",{"_index":66,"title":{},"body":{"components/AccountComponent.html":{},"classes/AccountModel.html":{},"injectables/GithubService.html":{},"interfaces/IAccountModel.html":{},"injectables/IdentityService.html":{}}}],["userlogin",{"_index":611,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(account",{"_index":615,"title":{},"body":{"injectables/IdentityService.html":{}}}],["userlogin(this.loginform.value",{"_index":72,"title":{},"body":{"components/AccountComponent.html":{}}}],["userlogout",{"_index":612,"title":{},"body":{"injectables/IdentityService.html":{},"components/NavbarComponent.html":{}}}],["username",{"_index":84,"title":{},"body":{"components/AccountComponent.html":{},"interceptors/IdentityInterceptor.html":{},"injectables/IdentityService.html":{}}}],["usevalue",{"_index":379,"title":{},"body":{"modules/ContainerModule.html":{}}}],["validators",{"_index":52,"title":{},"body":{"components/AccountComponent.html":{}}}],["validators.required",{"_index":67,"title":{},"body":{"components/AccountComponent.html":{}}}],["value",{"_index":294,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/IdentityService.html":{},"injectables/MessageService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":133,"title":{},"body":{"components/AccountComponent.html":{},"components/AppComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["variable",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":870,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":816,"title":{},"body":{"index.html":{}}}],["via",{"_index":847,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/GitProfileComponent.html":{},"components/GitResultComponent.html":{},"components/GitSearchComponent.html":{},"components/GithubComponent.html":{},"injectables/MessageService.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["warning",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["webpals",{"_index":685,"title":{},"body":{"components/NavbarComponent.html":{}}}],["webpalshub",{"_index":811,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":75,"title":{},"body":{"components/AccountComponent.html":{}}}],["white",{"_index":332,"title":{},"body":{"components/ContainerComponent.html":{},"components/NavbarComponent.html":{},"components/SidenavComponent.html":{}}}],["width",{"_index":101,"title":{},"body":{"components/AccountComponent.html":{},"components/ContainerComponent.html":{},"components/GitResultComponent.html":{},"components/SidenavComponent.html":{}}}],["works",{"_index":401,"title":{},"body":{"components/GitProfileComponent.html":{}}}],["x",{"_index":347,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["x.fork",{"_index":536,"title":{},"body":{"injectables/GithubService.html":{}}}],["x.id",{"_index":515,"title":{},"body":{"injectables/GithubService.html":{}}}],["x.login",{"_index":538,"title":{},"body":{"injectables/GithubService.html":{}}}],["y",{"_index":346,"title":{},"body":{"components/ContainerComponent.html":{},"components/SidenavComponent.html":{}}}],["yes",{"_index":165,"title":{},"body":{"classes/AccountModel.html":{},"classes/AppConfig.html":{},"modules/ContainerModule.html":{},"injectables/ContainerService.html":{},"injectables/GithubService.html":{},"injectables/NetworkService.html":{}}}],["zone.js",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":191,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/ContainerModule.html":{},"modules/GithubModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/account.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account\n            \n\n            \n                styleUrls\n                ./account.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identtiy: IdentityService, message: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identtiy\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initForm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account/account.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { MessageType } from '@enums/message.enum'\nimport { IAccountModel } from '@models/account'\nimport { IdentityService } from '@services/account.service'\nimport { MessageService } from '@services/message.service'\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n  public loginForm: FormGroup;\n  constructor(private identtiy: IdentityService, private message: MessageService) { this.initForm(); }\n  ngOnInit() { }\n  private initForm() {\n    this.loginForm = new FormGroup({\n      'user': new FormControl('', Validators.required),\n      'pass': new FormControl('', Validators.required),\n      'rememberMe': new FormControl(true)\n    })\n  }\n  public onLogin() {\n    this.identtiy\n      .userLogin(this.loginForm.value)\n      .then((result: IAccountModel) => {\n        this.message.show('Logged In!', `Welcome ${result.name}`, MessageType.Success);\n        this.initForm();\n      })\n      .catch((error: Error) => {\n        this.loginForm.setErrors({ credentials: error.message });\n        this.loginForm.controls.user.setErrors({ username: 'Invalid username' });\n        this.loginForm.controls.pass.setErrors({ password: 'Invalid password' });\n\n        this.message.show('Login Failed', error.message, MessageType.Error);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    Account Login\n  \n  \n    \n      \n        \n        \n        Username\n      \n      \n        \n        \n        Password\n      \n      \n        {{ this.loginForm.errors?.credentials }}\n      \n      \n        \n        Login\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./account.component.scss\n                \n                @import \"common.scss\";\n\n.card-form {\n  @extend .shadow;\n  margin: 100px auto;\n  width: 50%;\n  .card-header {\n    padding: 15px;\n    font-size: 24px;\n  }\n  .card-body {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 50px;\n    text-align: center;\n  }\n}\n.fa {\n  margin-right: 10px;\n}\n#login-btn {\n  font-size: 16px;\n  width: 50%;\n  border-radius: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Account Login                                      Username                                    Password                    {{ this.loginForm.errors?.credentials }}                            Login            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AccountModel.html":{"url":"classes/AccountModel.html","title":"class - AccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/account.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                pass\n                            \n                            \n                                    Public\n                                rememberMe\n                            \n                            \n                                    Public\n                                state\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAccountModel)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/account.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAccountModel\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/account.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/account.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            rememberMe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/account.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/account.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/account.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IAccountModel {\n  name?: string;\n  pass?: string;\n  user?: string;\n  state?: boolean;\n  rememberMe?: boolean;\n}\nexport class AccountModel {\n  public name: string;\n  public pass: string;\n  public user: string;\n  public state: boolean;\n  public rememberMe: boolean;\n\n  constructor(args?: IAccountModel) {\n    Object.keys(args)\n      .forEach(key => this[key] = args[key]);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AccountModule_exports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountComponent->AccountModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nAccountModule->AccountComponent \n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nAccountModule -->\n\nMessageService->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MessageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MessageService       } from 'primeng/api'\nimport { InputTextModule      } from 'primeng/inputtext'\nimport { AccountRoutingModule } from '@account/account-routing.module'\nimport { AccountComponent     } from '@account/account.component'\nimport { CommonModule         } from '@angular/common'\nimport { NgModule             } from '@angular/core'\nimport { ReactiveFormsModule  } from '@angular/forms'\n\nconst components = [AccountComponent];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    ReactiveFormsModule,\n    InputTextModule,\n  ],\n  providers: [MessageService],\n  declarations: components,\n  exports: components,\n})\nexport class AccountModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountRoutingModule.html":{"url":"modules/AccountRoutingModule.html","title":"module - AccountRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/account/account-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { AccountComponent } from '@account/account.component'\nimport { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nconst routes: Routes = [\n  { path: '', component: AccountComponent, children: [] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppConfig.html":{"url":"classes/AppConfig.html","title":"class - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/helpers/app-config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: IAppConfig)\n                    \n                \n                        \n                            \n                                Defined in src/shared/helpers/app-config.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        IAppConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandSidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/helpers/app-config.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface IAppConfig {\n  expandSidenav: boolean;\n\n}\nexport class AppConfig {\n  public expandSidenav: boolean;\n  constructor(args?: IAppConfig) {\n    Object.keys(args)\n      .forEach(key => this[key] = args[key]);\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nAppModule -->\n\nIdentityService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IdentityService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ContainerModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ToastrModule            } from 'ngx-toastr'\nimport { NgModule                } from '@angular/core'\nimport { BrowserModule           } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule        } from '@client/app-routing.module'\nimport { AppComponent            } from '@client/app.component'\nimport { ContainerModule         } from '@container/container.module'\nimport { AuthGuard               } from '@services/account.guard'\nimport { IdentityService         } from '@services/account.service'\nimport { SessionGuard            } from '@services/session.guard'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ToastrModule.forRoot(),\n    ContainerModule.forRoot({\n      expandSidenav: true\n    }),\n  ],\n  providers: [IdentityService, AuthGuard, SessionGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule             } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { AuthGuard            } from '@services/account.guard'\nimport { SessionGuard         } from '@services/session.guard'\n\nconst routes: Routes = [\n  { path: 'auth', canActivate: [SessionGuard], loadChildren: () => \"import('./account/account.module').then(m => m.AccountModule)\" },\n  { path: 'search', canActivate: [AuthGuard], loadChildren: () => \"import('./github/github.module').then(m => m.GithubModule)\" },\n  { path: '**', pathMatch: 'full', redirectTo: 'search' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/services/account.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/account.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/account.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, NavigationStart, Router, RouterStateSnapshot } from '@angular/router'\nimport { IdentityService } from '@services/account.service'\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private identity: IdentityService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (!this.identity.account.state) {\n      this.router.navigate(['auth']);\n    }\n    return this.identity.account.state;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/container.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                account\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                sidenav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(primengConfig: PrimeNGConfig, router: Router, identity: IdentityService, container: ContainerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        primengConfig\n                                                  \n                                                        \n                                                                    PrimeNGConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        ContainerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAccountModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenav\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/container.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PrimeNGConfig } from 'primeng/api'\nimport { Component, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { IdentityService } from '@services/account.service'\nimport { IAccountModel } from '@models/account';\nimport { ContainerService } from '@services/container.service';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n  public route: string = '';\n  public sidenav: string;\n  public account: IAccountModel;\n\n  constructor(private primengConfig: PrimeNGConfig, private router: Router, private identity: IdentityService, private container: ContainerService) {\n    this.primengConfig.ripple = true;\n    this.account = this.identity.account;\n    this.sidenav = this.container.sidenavClass;\n\n    this.container.$sidenavChanged\n      .subscribe({ next: result => this.sidenav = result });\n    this.router.events\n      .subscribe({\n        next: event => this.route = !(event instanceof NavigationEnd) ? this.route :\n          event.urlAfterRedirects.slice(1).replace('/', ' ')\n      });\n    this.identity.$authChanged\n      .subscribe({ next: result => this.account = result });\n  }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n    \n      {{ this.route }}\n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                @import \"common.scss\";\n.app-container {\n  height: 100vh;\n  margin: 0;\n  max-height: 100vh;\n  max-width: 100vw;\n  padding: 0;\n  width: 100vw;\n\n  display: flex;\n  justify-content: space-between;\n\n  .container-sidenav {\n    height: 100vh;\n  }\n  .collapsed {\n    transition: ease-in-out 250ms;\n    min-width: 50px;\n    max-width: 50px;\n  }\n  .expanded {\n    min-width: 250px;\n    max-width: 250px;\n    transition: ease-in-out 250ms;\n  }\n  .container-center {\n    flex: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    .container-navbar {\n      max-height: 40px;\n      height: 40px;\n    }\n    .container-content {\n      flex: auto;\n      max-height: calc(100vh-40px);\n      .content-title {\n        display: flex;\n        align-items: center;\n        color: white;\n        padding: 0px 15px;\n        font-size: 35px;\n        background: lighten($color: $primary, $amount: 10%);\n        text-transform: capitalize;\n        height: 80px;\n      }\n      .content-main {\n        padding: 10px;\n        height: calc(100% - 80px);\n        max-height: calc(100% - 80px);\n        overflow-y: auto;\n        overflow-x: hidden;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ this.route }}                          '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerModule.html":{"url":"modules/ContainerModule.html","title":"module - ContainerModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_ContainerModule_declarations\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_exports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nAccountComponent->ContainerModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nContainerModule->AccountComponent \n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nContainerService\n\nContainerService\n\nContainerModule -->\n\nContainerService->ContainerModule\n\n\n\n\n\nGithubService\n\nGithubService\n\nContainerModule -->\n\nGithubService->ContainerModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nContainerModule -->\n\nNetworkService->ContainerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ContainerService\n                        \n                        \n                            GithubService\n                        \n                        \n                            NetworkService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ContainerRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(args?: AppConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/container.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                AppConfig\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { CommonModule } from '@angular/common'\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http'\nimport { ModuleWithProviders, NgModule } from '@angular/core'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { ContainerRoutingModule } from '@container/container-routing.module'\nimport { ContainerComponent } from '@container/container.component'\nimport { NavbarComponent } from '@container/navbar/navbar.component'\nimport { SidenavComponent } from '@container/sidenav/sidenav.component'\nimport { AppConfig } from '@helpers/app-config'\nimport { IdentityInterceptor } from '@interceptors/account.interceptor'\nimport { NetworkInterceptor } from '@interceptors/network.interceptor'\nimport { ContainerService } from '@services/container.service'\nimport { GithubService } from '@services/github.service'\nimport { NetworkService } from '@services/network.service'\n\nconst components = [\n  ContainerComponent,\n  NavbarComponent,\n  SidenavComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ContainerRoutingModule\n  ],\n  declarations: components,\n  providers: [\n    GithubService,\n    NetworkService,\n    ContainerService\n  ],\n  exports: components,\n})\nexport class ContainerModule {\n  static forRoot(args?: AppConfig): ModuleWithProviders {\n    return {\n      ngModule: ContainerModule,\n      providers: [\n        { provide: AppConfig, useValue: args },\n        { provide: HTTP_INTERCEPTORS, useClass: IdentityInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: NetworkInterceptor, multi: true },\n        GithubService,\n        NetworkService,\n        ContainerService\n      ]\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContainerRoutingModule.html":{"url":"modules/ContainerRoutingModule.html","title":"module - ContainerRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ContainerRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/container/container-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContainerRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContainerService.html":{"url":"injectables/ContainerService.html","title":"injectable - ContainerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContainerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/container.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $sidenavChanged\n                            \n                            \n                                    Public\n                                sidenavClass\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(args?: AppConfig)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/container.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $sidenavChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/container.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sidenavClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'expanded'\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/container.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core'\nimport { AppConfig } from '@helpers/app-config';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ContainerService {\n  public $sidenavChanged: Subject = new Subject();\n  public sidenavClass: string = 'expanded';\n  constructor(private args?: AppConfig) {\n    this.sidenavClass = args.expandSidenav ? 'expanded' : 'collapsed';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GitProfileComponent.html":{"url":"components/GitProfileComponent.html","title":"component - GitProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GitProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/github/git-profile/git-profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-git-profile\n            \n\n            \n                styleUrls\n                ./git-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./git-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/github/git-profile/git-profile.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/github/git-profile/git-profile.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-git-profile',\n  templateUrl: './git-profile.component.html',\n  styleUrls: ['./git-profile.component.scss']\n})\nexport class GitProfileComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  git-profile works!\n\n\n    \n\n    \n                \n                    ./git-profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  git-profile works!'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GitProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GitResultComponent.html":{"url":"components/GitResultComponent.html","title":"component - GitResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GitResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/github/git-result/git-result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-git-result\n            \n\n            \n                styleUrls\n                ./git-result.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./git-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                profiles\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/github/git-result/git-result.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        profiles\n                    \n                \n                \n                    \n                        Type :         IGitProfile[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/github/git-result/git-result.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/github/git-result/git-result.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core'\nimport { IGitProfile } from '@models/git-profile'\n\n@Component({\n  selector: 'app-git-result',\n  templateUrl: './git-result.component.html',\n  styleUrls: ['./git-result.component.scss']\n})\nexport class GitResultComponent implements OnInit {\n  @Input() public profiles: IGitProfile[];\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n  Nothing to see here\n\n\n  \n    \n      Profiles\n    \n    \n      \n        Image\n        Id\n        Name\n        Following\n        Followers\n      \n    \n    \n      \n        \n          \n        \n        {{ profile.id }}\n        {{ profile.name | titlecase }}\n        {{ profile.following }}\n        {{ profile.followers }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./git-result.component.scss\n                \n                .avatar {\n  border-radius: 50%;\n  width: 50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Nothing to see here            Profiles                      Image        Id        Name        Following        Followers                                                      {{ profile.id }}        {{ profile.name | titlecase }}        {{ profile.following }}        {{ profile.followers }}            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GitResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GitSearchComponent.html":{"url":"components/GitSearchComponent.html","title":"component - GitSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GitSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/github/git-search/git-search.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-git-search\n            \n\n            \n                styleUrls\n                ./git-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./git-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                profiles\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(github: GithubService)\n                    \n                \n                        \n                            \n                                Defined in src/app/github/git-search/git-search.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        github\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/github/git-search/git-search.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSearch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/github/git-search/git-search.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            profiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGitProfile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/github/git-search/git-search.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/github/git-search/git-search.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { IGitProfile } from '@models/git-profile'\nimport { GithubService } from '@services/github.service'\n\n@Component({\n  selector: 'app-git-search',\n  templateUrl: './git-search.component.html',\n  styleUrls: ['./git-search.component.scss']\n})\nexport class GitSearchComponent implements OnInit {\n  public search: string;\n  public profiles: IGitProfile[];\n  constructor(private github: GithubService) { }\n  ngOnInit() { }\n  public onSearch() {\n    this.profiles = null;\n    this.github.searchUsers(this.search).then(result => this.profiles = result);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n        Search\n      \n    \n    \n      \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./git-search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Search                                        '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GitSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubComponent.html":{"url":"components/GithubComponent.html","title":"component - GithubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GithubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/github/github.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github\n            \n\n            \n                styleUrls\n                ./github.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./github.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/github/github.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/github/github.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-github',\n  templateUrl: './github.component.html',\n  styleUrls: ['./github.component.scss']\n})\nexport class GithubComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./github.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GithubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_declarations\n\n\n\ncluster_GithubModule_imports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nGithubModule\n\nGithubModule\n\nGithubModule -->\n\nAccountComponent->GithubModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nGithubModule->AccountComponent \n\n\n\n\n\nGithubRoutingModule\n\nGithubRoutingModule\n\nGithubModule -->\n\nGithubRoutingModule->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/github/github.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccountComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BadgeModule         } from 'primeng/badge'\nimport { ButtonModule        } from 'primeng/button'\nimport { InputTextModule     } from 'primeng/inputtext'\nimport { ProgressBarModule   } from 'primeng/progressbar'\nimport { RatingModule        } from 'primeng/rating'\nimport { TableModule         } from 'primeng/table'\nimport { CommonModule        } from '@angular/common'\nimport { NgModule            } from '@angular/core'\nimport { FormsModule         } from '@angular/forms'\nimport { GitProfileComponent } from '@github/git-profile/git-profile.component'\nimport { GitResultComponent  } from '@github/git-result/git-result.component'\nimport { GitSearchComponent  } from '@github/git-search/git-search.component'\nimport { GithubRoutingModule } from '@github/github-routing.module'\nimport { GithubComponent     } from '@github/github.component'\n\nconst components = [GithubComponent, GitSearchComponent, GitProfileComponent, GitResultComponent]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GithubRoutingModule,\n    BadgeModule,\n    ButtonModule,\n    FormsModule,\n    InputTextModule,\n    ProgressBarModule,\n    RatingModule,\n    TableModule,\n  ],\n  declarations: components,\n  exports: components,\n})\nexport class GithubModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubRoutingModule.html":{"url":"modules/GithubRoutingModule.html","title":"module - GithubRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/github/github-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { GitProfileComponent } from '@github/git-profile/git-profile.component'\nimport { GitSearchComponent } from '@github/git-search/git-search.component'\nimport { GithubComponent } from '@github/github.component'\n\nconst routes: Routes = [\n  {\n    path: '', component: GithubComponent, children: [\n      { path: '', component: GitSearchComponent },\n      { path: 'profile', component: GitProfileComponent },\n      { path: '', pathMatch: 'full', redirectTo: '' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GithubRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/github.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                profiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getProfile\n                            \n                            \n                                    Public\n                                searchUsers\n                            \n                            \n                                    Public\n                                    Async\n                                updateProfile\n                            \n                            \n                                    Public\n                                    Async\n                                updateRepositories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService, http: HttpClient, args?: AppConfig)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/github.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                        NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(user: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/github.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchUsers(login: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/github.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(profile: IGitProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/github.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                IGitProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateRepositories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRepositories(profile: IGitProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/github.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                IGitProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            profiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IGitProfile[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/github.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { map } from 'rxjs/operators'\nimport { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Providers } from '@enums/provider.enum'\nimport { AppConfig } from '@helpers/app-config'\nimport { IGitProfile } from '@models/git-profile'\nimport { IGitRepository } from '@models/git-repository'\nimport { IGitSearch } from '@models/git-search'\nimport { NetworkService } from '@services/network.service'\n\n@Injectable()\nexport class GithubService {\n  private readonly profiles: IGitProfile[] = new Array()\n  constructor(private network: NetworkService, private http: HttpClient, private args?: AppConfig) { }\n\n  public searchUsers(login: string): Promise {\n    return new Promise((resolve, reject) => {\n      const filters = { q: login, per_page: '5' }\n      this.network.get({ provider: Providers.Github, path: 'search/users', params: filters }).toPromise()\n        .then((response: IGitSearch) => {\n          response.items.forEach((profile: IGitProfile) => {\n            this.updateProfile(profile)\n              .then((result: IGitProfile) => {\n                const current = this.profiles.find(x => x.id == result.id);\n                if (current) this.profiles.splice(this.profiles.indexOf(current), 1, result);\n                else this.profiles.push(result);\n\n                if (result.id == response.items[response.items.length - 1].id)\n                  resolve(this.profiles.slice())\n              });\n          })\n        });\n    });\n  }\n  public async updateProfile(profile: IGitProfile): Promise {\n    return new Promise((resolve, reject) => {\n      this.http.get(profile.url).toPromise()\n        .then(result => {\n          Object.keys(result).forEach(key => profile[key] = profile[key] ?? result[key]);\n          this.updateRepositories(result)\n            .then((result: IGitRepository[]) => {\n              profile.repositories = result;\n              resolve(profile);\n            });\n        });\n    });\n  }\n  public async updateRepositories(profile: IGitProfile): Promise {\n    return await this.http.get(profile.repos_url, { params: { per_page: '100' } })\n      .pipe(map(result => result.filter(x => !x.fork)))\n      .toPromise();\n  }\n  public async getProfile(user: string): Promise {\n    return this.profiles.some(x => x.login == user)\n      ? this.profiles.slice().find(x => x.login == user)\n      : (await this.searchUsers(user))[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAccountModel.html":{"url":"interfaces/IAccountModel.html","title":"interface - IAccountModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAccountModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/account.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        pass\n                                \n                                \n                                            Optional\n                                        rememberMe\n                                \n                                \n                                            Optional\n                                        state\n                                \n                                \n                                            Optional\n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pass\n                                    \n                                \n                                \n                                    \n                                        pass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rememberMe\n                                    \n                                \n                                \n                                    \n                                        rememberMe:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAccountModel {\n  name?: string;\n  pass?: string;\n  user?: string;\n  state?: boolean;\n  rememberMe?: boolean;\n}\nexport class AccountModel {\n  public name: string;\n  public pass: string;\n  public user: string;\n  public state: boolean;\n  public rememberMe: boolean;\n\n  constructor(args?: IAccountModel) {\n    Object.keys(args)\n      .forEach(key => this[key] = args[key]);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppConfig.html":{"url":"interfaces/IAppConfig.html","title":"interface - IAppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/helpers/app-config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expandSidenav\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expandSidenav\n                                    \n                                \n                                \n                                    \n                                        expandSidenav:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAppConfig {\n  expandSidenav: boolean;\n\n}\nexport class AppConfig {\n  public expandSidenav: boolean;\n  constructor(args?: IAppConfig) {\n    Object.keys(args)\n      .forEach(key => this[key] = args[key]);\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGitProfile.html":{"url":"interfaces/IGitProfile.html","title":"interface - IGitProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGitProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/git-profile.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        avatar_url\n                                \n                                \n                                            Optional\n                                        blog\n                                \n                                \n                                            Optional\n                                        created_at\n                                \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        events_url\n                                \n                                \n                                            Optional\n                                        followers\n                                \n                                \n                                            Optional\n                                        followers_url\n                                \n                                \n                                            Optional\n                                        following\n                                \n                                \n                                            Optional\n                                        following_url\n                                \n                                \n                                            Optional\n                                        gists_url\n                                \n                                \n                                            Optional\n                                        gravatar_id\n                                \n                                \n                                            Optional\n                                        html_url\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        location\n                                \n                                \n                                            Optional\n                                        login\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        node_id\n                                \n                                \n                                            Optional\n                                        organizations_url\n                                \n                                \n                                            Optional\n                                        public_gists\n                                \n                                \n                                            Optional\n                                        public_repos\n                                \n                                \n                                            Optional\n                                        received_events_url\n                                \n                                \n                                            Optional\n                                        repos_url\n                                \n                                \n                                            Optional\n                                        repositories\n                                \n                                \n                                            Optional\n                                        score\n                                \n                                \n                                            Optional\n                                        site_admin\n                                \n                                \n                                            Optional\n                                        starred_url\n                                \n                                \n                                            Optional\n                                        subscriptions_url\n                                \n                                \n                                            Optional\n                                        twitter_username\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        updated_at\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar_url\n                                    \n                                \n                                \n                                    \n                                        avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blog\n                                    \n                                \n                                \n                                    \n                                        blog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events_url\n                                    \n                                \n                                \n                                    \n                                        events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                    \n                                \n                                \n                                    \n                                        followers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_url\n                                    \n                                \n                                \n                                    \n                                        followers_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                    \n                                \n                                \n                                    \n                                        following:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_url\n                                    \n                                \n                                \n                                    \n                                        following_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gists_url\n                                    \n                                \n                                \n                                    \n                                        gists_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gravatar_id\n                                    \n                                \n                                \n                                    \n                                        gravatar_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_url\n                                    \n                                \n                                \n                                    \n                                        html_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizations_url\n                                    \n                                \n                                \n                                    \n                                        organizations_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_gists\n                                    \n                                \n                                \n                                    \n                                        public_gists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_repos\n                                    \n                                \n                                \n                                    \n                                        public_repos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        received_events_url\n                                    \n                                \n                                \n                                    \n                                        received_events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos_url\n                                    \n                                \n                                \n                                    \n                                        repos_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repositories\n                                    \n                                \n                                \n                                    \n                                        repositories:         IGitRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGitRepository[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_admin\n                                    \n                                \n                                \n                                    \n                                        site_admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starred_url\n                                    \n                                \n                                \n                                    \n                                        starred_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscriptions_url\n                                    \n                                \n                                \n                                    \n                                        subscriptions_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        twitter_username\n                                    \n                                \n                                \n                                    \n                                        twitter_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IGitRepository } from '@models/git-repository';\n\nexport interface IGitProfile {\n  avatar_url?: string;\n  blog?: string;\n  created_at?: string;\n  email?: string;\n  events_url?: string;\n  followers?: number;\n  followers_url?: string;\n  following?: number;\n  following_url?: string;\n  gists_url?: string;\n  gravatar_id?: string;\n  html_url?: string;\n  id?: number\n  location?: string;\n  login?: string;\n  name?: string;\n  node_id?: string;\n  organizations_url?: string;\n  public_gists?: number;\n  public_repos?: number;\n  received_events_url?: string;\n  repos_url?: string;\n  repositories?: IGitRepository[]\n  score?: number\n  site_admin?: boolean\n  starred_url?: string;\n  subscriptions_url?: string;\n  twitter_username?: string;\n  type?: string;\n  updated_at?: string;\n  url?: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGitSearch.html":{"url":"interfaces/IGitSearch.html","title":"interface - IGitSearch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGitSearch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/git-search.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        incomplete_results\n                                \n                                \n                                        items\n                                \n                                \n                                        total_count\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        incomplete_results\n                                    \n                                \n                                \n                                    \n                                        incomplete_results:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:         IGitProfile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IGitProfile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_count\n                                    \n                                \n                                \n                                    \n                                        total_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IGitProfile } from '@models/git-profile';\n\nexport interface IGitSearch {\n  incomplete_results: boolean;\n  items: IGitProfile[];\n  total_count: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHttpRequest.html":{"url":"interfaces/IHttpRequest.html","title":"interface - IHttpRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHttpRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/helpers/http-request.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         ISearchParams\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ISearchParams\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ISearchParams } from '@helpers/search-params'\n\nexport interface IHttpRequest {\n  provider: string,\n  path?: string,\n  params?: ISearchParams\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchParams.html":{"url":"interfaces/ISearchParams.html","title":"interface - ISearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/helpers/search-params.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/shared/helpers/search-params.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface ISearchParams {\n  [key: string]: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/IdentityInterceptor.html":{"url":"interceptors/IdentityInterceptor.html","title":"interceptor - IdentityInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  IdentityInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/account.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interceptors/account.interceptor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Providers } from '@enums/provider.enum'\nimport { endpoints } from '@env/environment'\n\n@Injectable()\nexport class IdentityInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const original = req.clone();\n    const username = original.url.split(`${Providers.Identity}/`)[1];\n\n    if (req.url.startsWith(Providers.Identity)) {\n      req = req.clone({\n        url: endpoints.identity.baseUrl\n      });\n    }\n    return next.handle(req)\n      .pipe(\n        map(result => {\n          if (result instanceof HttpResponse) {\n            if (original.url.startsWith(Providers.Identity)) {\n              return new HttpResponse({ body: result.body[username] });\n            }\n          }\n          return result;\n        })\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IdentityService.html":{"url":"injectables/IdentityService.html","title":"injectable - IdentityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IdentityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                $authChanged\n                            \n                            \n                                    Public\n                                account\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initIdentity\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(network: NetworkService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/account.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        network\n                                                  \n                                                        \n                                                                        NetworkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initIdentity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initIdentity()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/account.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(account: IAccountModel)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/account.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                IAccountModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/account.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            $authChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/account.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IAccountModel\n\n                        \n                    \n                    \n                        \n                            Default value : { state: false }\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/account.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Subject } from 'rxjs'\nimport { tap } from 'rxjs/operators'\nimport { Injectable } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { Providers } from '@enums/provider.enum'\nimport { IAccountModel } from '@models/account'\nimport { NetworkService } from '@services/network.service'\n\n@Injectable()\nexport class IdentityService {\n  public $authChanged: Subject = new Subject();\n  public account: IAccountModel = { state: false };\n  constructor(private network: NetworkService, private router: Router) {\n    this.$authChanged.subscribe({\n      next: (result: IAccountModel) => {\n        if (result.state) {\n          localStorage.setItem('Identity', JSON.stringify(result));\n        }\n        else localStorage.removeItem('Identity');\n        this.router.navigate([result.state ? 'search' : 'auth']);\n        this.account = result;\n      }\n    });\n    this.initIdentity();\n  }\n\n  private initIdentity(): Promise {\n    return Promise.resolve().then(() => {\n      if (!this.account.state && localStorage.getItem('Identity')) {\n        this.$authChanged.next(JSON.parse(localStorage.getItem('Identity')));\n      }\n    });\n  }\n\n  public userLogin(account: IAccountModel): Promise {\n    return this.network\n      .get({ provider: Providers.Identity, path: account.user })\n      .pipe(tap((result: IAccountModel) => {\n        if (result?.user == account.user && result?.pass == account.pass) {\n          this.$authChanged.next({ name: result.name, user: result.user, state: true });\n        }\n        else throw Error('Invalid username or password');\n      }))\n      .toPromise();\n  }\n  public userLogout(): Promise {\n    return Promise.resolve().then(() => {\n      if (localStorage.getItem('Identity')) {\n        this.$authChanged.next({ state: false });\n      }\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/message.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            show\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    show(title: string, message: string, type: MessageType)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/message.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                MessageType\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        MessageType.Info\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ToastrService } from 'ngx-toastr'\nimport { Injectable } from '@angular/core'\nimport { MessageType } from '@enums/message.enum'\n\n@Injectable({ providedIn: 'root' })\nexport class MessageService {\n  // ======================================= //\n  constructor(private service: ToastrService) {\n    this.service.toastrConfig.autoDismiss       = true                ;\n    this.service.toastrConfig.closeButton       = true                ;\n    this.service.toastrConfig.easing            = 'ease-in-out'       ;\n    this.service.toastrConfig.extendedTimeOut   = 1000                ;\n    this.service.toastrConfig.maxOpened         = 2                   ;\n    this.service.toastrConfig.newestOnTop       = false               ;\n    this.service.toastrConfig.positionClass     = 'toast-bottom-right';\n    this.service.toastrConfig.preventDuplicates = false               ;\n    this.service.toastrConfig.progressAnimation = 'decreasing'        ;\n    this.service.toastrConfig.progressBar       = true                ;\n    this.service.toastrConfig.tapToDismiss      = true                ;\n    this.service.toastrConfig.timeOut           = 1500                ;\n  }\n  // ======================================= //\n  public show(title: string, message: string, type: MessageType = MessageType.Info) {\n    switch (type) {\n      case MessageType.Error:\n        this.service.error(message, title);\n        break;\n      case MessageType.Info:\n        this.service.info(message, title);\n        break;\n      case MessageType.Success:\n        this.service.success(message, title);\n        break;\n      case MessageType.Warning:\n        this.service.warning(message, title);\n        break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                userLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/navbar/navbar.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/navbar/navbar.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            userLogout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/navbar/navbar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core'\nimport { IdentityService } from '@services/account.service'\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private identity: IdentityService) { }\n  ngOnInit() { }\n  public userLogout() {\n    this.identity.userLogout();\n  }\n}\n\n    \n\n    \n        \n  webpals\n  \n    \n      \n        \n      \n      \n        \n          Logout\n        \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                @import \"common.scss\";\n.app-navbar {\n  align-items: center;\n  background: $primary;\n  color: white;\n  display: flex;\n  height: 40px;\n  justify-content: space-between;\n  max-height: 40px;\n  padding: 0px 10px;\n\n  .navbar-start {\n    flex: auto;\n    font-size: 20px;\n  }\n  .navbar-links {\n    display: flex;\n    .btn:hover {\n      background: lighten($color: $primary, $amount: 10%);\n    }\n  }\n}\n.dropdown-menu.show {\n  position: absolute;\n  padding: 0px;\n  border: none;\n}\n.dropdown-item {\n  color: $primary;\n  padding: 10px 10px;\n  position: relative;\n}\n.dropdown-item:hover {\n  transition: ease-in-out 250ms;\n  background: $primary;\n  color: white;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  webpals                                                  Logout                                                '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/NetworkInterceptor.html":{"url":"interceptors/NetworkInterceptor.html","title":"interceptor - NetworkInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  NetworkInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interceptors/network.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interceptors/network.interceptor.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs'\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { Providers } from '@enums/provider.enum'\nimport { endpoints } from '@env/environment'\n\n@Injectable()\nexport class NetworkInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    if (req.url.includes(Providers.Github)) {\n      req = req.clone({\n        url: `${endpoints.github.baseUrl}${req.url.split(Providers.Github)[1]}`\n      })\n    }\n    return next.handle(req);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkService.html":{"url":"injectables/NetworkService.html","title":"injectable - NetworkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NetworkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/network.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, args?: AppConfig)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/network.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        args\n                                                  \n                                                        \n                                                                        AppConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(body: IHttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/network.service.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                IHttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { AppConfig } from '@helpers/app-config'\nimport { IHttpRequest } from '@helpers/http-request'\nimport { Observable } from 'rxjs'\n\n@Injectable()\nexport class NetworkService {\n  constructor(private http: HttpClient, private args?: AppConfig) { }\n  public get(body: IHttpRequest): Observable {\n    return this.http\n      .get(body.path ? `${body.provider}/${body.path}` : body.provider, { params: body.params });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/SessionGuard.html":{"url":"guards/SessionGuard.html","title":"guard - SessionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    SessionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/shared/services/session.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(identity: IdentityService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/session.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        identity\n                                                  \n                                                        \n                                                                        IdentityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/session.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core'\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router'\nimport { IdentityService } from '@services/account.service'\n\n@Injectable({ providedIn: 'root' })\nexport class SessionGuard implements CanActivate {\n  constructor(private identity: IdentityService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.identity.account.state) {\n      this.router.navigate(['search']);\n    }\n    return !this.identity.account.state;\n  }\n}\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/container/sidenav/sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n            \n                styleUrls\n                ./sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onToggleSidenav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(container: ContainerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        container\n                                                  \n                                                        \n                                                                        ContainerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onToggleSidenav\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onToggleSidenav()\n                \n            \n\n\n            \n                \n                    Defined in src/app/container/sidenav/sidenav.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/container/sidenav/sidenav.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContainerService } from '@services/container.service';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n  public state: boolean;\n  constructor(private container: ContainerService, private router: Router) {\n    this.state = this.container.sidenavClass == 'expanded';\n  }\n  ngOnInit() { }\n  public onToggleSidenav() {\n    this.state = !this.state;\n    this.container.$sidenavChanged.next(this.state ? 'expanded' : 'collapsed')\n  }\n}\n\n    \n\n    \n        \n  \n    Hub\n    \n      \n    \n  \n  \n    \n      \n        \n        Search\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                @import \"common.scss\";\n\n.app-sidenav {\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: space-between;\n\n  .sidenav-header {\n    width: 100%;\n    color: white;\n    background: $primary;\n\n    min-height: 40px;\n    max-height: 40px;\n    display: flex;\n    align-items: center;\n    position: relative;\n    .font-pacifico {\n      opacity: 100%;\n      padding-left: 10px;\n      font-size: 20px;\n      transition: ease-in-out 250ms;\n    }\n\n    .btn {\n      margin-right: 8px;\n      right: 0px;\n      position: absolute;\n      border-radius: 50%;\n      color: white;\n      transition: ease-in-out 250ms;\n    }\n    .btn:hover {\n      transition: ease-in-out 250ms;\n      background: darken($color: $primary, $amount: 10%);\n      border: 1px solid lighten($color: $primary, $amount: 10%);\n    }\n  }\n  .sidenav-content {\n    padding: 10px 5px;\n    flex: auto;\n    overflow-y: auto;\n    overflow-x: hidden;\n    background: $dark;\n\n    .btn {\n      height: 35px;\n      max-height: 35px;\n      text-align: left;\n      position: relative;\n      span {\n        position: absolute;\n      }\n    }\n    .btn:hover {\n      transition: ease-in-out 250ms;\n      color: white;\n      background: $primary;\n    }\n    .btn:active {\n      transition: ease-in-out 250ms;\n      color: white;\n      background: darken($color: $primary, $amount: 10%);\n    }\n  }\n  .sidenav-content:hover {\n    overflow: overlay;\n  }\n  .sidenav-footer {\n    background: $primary;\n    height: 40px;\n  }\n}\n.hide {\n  display: none;\n}\n.active {\n  .btn * {\n    transition: ease-in-out 250ms;\n    color: $primary;\n  }\n}\n.active:hover {\n  .btn * {\n    color: white;\n    transition: ease-in-out 250ms;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Hub                                            Search        '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ContainerComponent', 'selector': 'app-container'},{'name': 'GithubComponent', 'selector': 'app-github'},{'name': 'GitProfileComponent', 'selector': 'app-git-profile'},{'name': 'GitResultComponent', 'selector': 'app-git-result'},{'name': 'GitSearchComponent', 'selector': 'app-git-search'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/account/account.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/container/container.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/container/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/container/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/github/git-profile/git-profile.component.ts\n            \n            component\n            GitProfileComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/github/git-result/git-result.component.ts\n            \n            component\n            GitResultComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/github/git-search/git-search.component.ts\n            \n            component\n            GitSearchComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/github/github.component.ts\n            \n            component\n            GithubComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/github/github.module.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            endpoints\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/helpers/app-config.ts\n            \n            class\n            AppConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/helpers/app-config.ts\n            \n            interface\n            IAppConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/helpers/http-request.ts\n            \n            interface\n            IHttpRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/helpers/search-params.ts\n            \n            interface\n            ISearchParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/interceptors/account.interceptor.ts\n            \n            interceptor\n            IdentityInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interceptors/network.interceptor.ts\n            \n            interceptor\n            NetworkInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/models/account.ts\n            \n            class\n            AccountModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/models/account.ts\n            \n            interface\n            IAccountModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/git-profile.ts\n            \n            interface\n            IGitProfile\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/shared/models/git-repository.ts\n            \n            interface\n            IGitRepository\n            \n                0 %\n                (0/73)\n            \n        \n        \n            \n                \n                src/shared/models/git-search.ts\n            \n            interface\n            IGitSearch\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/services/account.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/services/account.service.ts\n            \n            injectable\n            IdentityService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/services/container.service.ts\n            \n            injectable\n            ContainerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/services/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/services/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/services/network.service.ts\n            \n            injectable\n            NetworkService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/services/session.guard.ts\n            \n            guard\n            SessionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.0\n        \n            @angular/cdk : ^11.2.4\n        \n            @angular/common : ~11.0.0\n        \n            @angular/compiler : ~11.0.0\n        \n            @angular/core : ~11.0.0\n        \n            @angular/forms : ~11.0.0\n        \n            @angular/platform-browser : ~11.0.0\n        \n            @angular/platform-browser-dynamic : ~11.0.0\n        \n            @angular/router : ~11.0.0\n        \n            bootstrap : ^4.6.0\n        \n            firebase-tools : ^9.6.0\n        \n            font-awesome : ^4.7.0\n        \n            fsevents : ^2.3.2\n        \n            g : ^2.0.1\n        \n            jquery : ^3.6.0\n        \n            ngx-toastr : ^13.2.0\n        \n            popper.js : ^1.16.1\n        \n            primeicons : ^4.1.0\n        \n            primeng : ^11.3.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MessageType   (src/.../message.enum.ts)\n                        \n                        \n                            Providers   (src/.../provider.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/enums/message.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageType\n                    \n                \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n            \n        \n\n    src/shared/enums/provider.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Providers\n                    \n                \n                        \n                            \n                                 Github\n                            \n                        \n                        \n                            \n                                Value : Github\n                            \n                        \n                        \n                            \n                                 Identity\n                            \n                        \n                        \n                            \n                                Value : Identity\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWebPalsHub\nThis project was generated with Angular CLI version 11.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContainerRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AccountModule_exports\n\n\n\ncluster_AccountModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ContainerModule\n\n\n\ncluster_ContainerModule_imports\n\n\n\ncluster_ContainerModule_providers\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_imports\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nAccountComponent->AccountModule\n\n\n\n\n\nContainerModule\n\nContainerModule\n\nContainerModule -->\n\nAccountComponent->ContainerModule\n\n\n\n\n\nGithubModule\n\nGithubModule\n\nGithubModule -->\n\nAccountComponent->GithubModule\n\n\n\n\n\nAccountComponent \n\nAccountComponent \n\nAccountComponent  -->\n\nAccountModule->AccountComponent \n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nAccountModule -->\n\nMessageService->AccountModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\nAccountComponent  -->\n\nContainerModule->AccountComponent \n\n\n\nAppModule -->\n\nContainerModule->AppModule\n\n\n\n\n\nIdentityService\n\nIdentityService\n\nAppModule -->\n\nIdentityService->AppModule\n\n\n\n\n\nContainerRoutingModule\n\nContainerRoutingModule\n\nContainerModule -->\n\nContainerRoutingModule->ContainerModule\n\n\n\n\n\nContainerService\n\nContainerService\n\nContainerModule -->\n\nContainerService->ContainerModule\n\n\n\n\n\nGithubService\n\nGithubService\n\nContainerModule -->\n\nGithubService->ContainerModule\n\n\n\n\n\nNetworkService\n\nNetworkService\n\nContainerModule -->\n\nNetworkService->ContainerModule\n\n\n\nAccountComponent  -->\n\nGithubModule->AccountComponent \n\n\n\n\n\nGithubRoutingModule\n\nGithubRoutingModule\n\nGithubModule -->\n\nGithubRoutingModule->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            components   (src/.../account.module.ts)\n                        \n                        \n                            components   (src/.../container.module.ts)\n                        \n                        \n                            components   (src/.../github.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            endpoints   (src/.../environment.prod.ts)\n                        \n                        \n                            endpoints   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/account/account.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/container/container.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  ContainerComponent,\n  NavbarComponent,\n  SidenavComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/github/github.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [GithubComponent, GitSearchComponent, GitProfileComponent, GitResultComponent]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  identity: {\n    baseUrl: './assets/accounts.json'\n  },\n  github: {\n    baseUrl: 'https://api.github.com'\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            endpoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  identity: {\n    baseUrl: './assets/accounts.json'\n  },\n  github: {\n    baseUrl: 'https://api.github.com'\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
